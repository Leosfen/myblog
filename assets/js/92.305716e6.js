(window.webpackJsonp=window.webpackJsonp||[]).push([[92],{124:function(a,t,r){"use strict";r.r(t);var e=r(0),s=Object(e.a)({},function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"_2019年最新面试最新总结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2019年最新面试最新总结","aria-hidden":"true"}},[a._v("#")]),a._v(" 2019年最新面试最新总结")]),a._v(" "),r("p",{staticStyle:{"font-size":"20px"}},[a._v("2019年最新总结，阿里，腾讯，百度，美团，头条等技术面试题目，以及答案，专家出题人分析汇总。持续更新中。")]),a._v(" "),r("h2",{attrs:{id:"大厂分类篇"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#大厂分类篇","aria-hidden":"true"}},[a._v("#")]),a._v(" 大厂分类篇")]),a._v(" "),r("br"),a._v(" "),r("h3",{attrs:{id:"阿里篇"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#阿里篇","aria-hidden":"true"}},[a._v("#")]),a._v(" 阿里篇")]),a._v(" "),r("br"),a._v(" "),r("h5",{attrs:{id:"_1-1-1-如何实现一个高效的单向链表逆序输出？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-1-如何实现一个高效的单向链表逆序输出？","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/5d040b98.html"}},[a._v("1.1.1 如何实现一个高效的单向链表逆序输出？")])],1),a._v(" "),r("h5",{attrs:{id:"_1-1-2-已知sqrt-2-约等于1-414，要求不用数学库，求sqrt-2-精确到小数点后10位"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-2-已知sqrt-2-约等于1-414，要求不用数学库，求sqrt-2-精确到小数点后10位","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/35969184.html"}},[a._v("1.1.2 已知sqrt(2)约等于1.414，要求不用数学库，求sqrt(2)精确到小数点后10位")])],1),a._v(" "),r("h5",{attrs:{id:"_1-1-3-给定一个二叉搜索树-bst-，找到树中第-k-小的节点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-3-给定一个二叉搜索树-bst-，找到树中第-k-小的节点","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/fc2d6e0f.html"}},[a._v("1.1.3 给定一个二叉搜索树(BST)，找到树中第 K 小的节点")])],1),a._v(" "),r("h5",{attrs:{id:"_1-1-4-lru缓存机制"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-4-lru缓存机制","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/a1eecb6a.html"}},[a._v("1.1.4 LRU缓存机制")])],1),a._v(" "),r("h5",{attrs:{id:"_1-1-5-关于epoll和select的区别，以下哪些说法是正确的"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-5-关于epoll和select的区别，以下哪些说法是正确的","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/434689cc.html"}},[a._v("1.1.5 关于epoll和select的区别，以下哪些说法是正确的")])],1),a._v(" "),r("h5",{attrs:{id:"_1-1-6-从innodb的索引结构分析，为什么索引的-key-长度不能太长"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-6-从innodb的索引结构分析，为什么索引的-key-长度不能太长","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/237fae15.html"}},[a._v("1.1.6 从innodb的索引结构分析，为什么索引的 key 长度不能太长")])],1),a._v(" "),r("h5",{attrs:{id:"_1-1-7-mysql的数据如何恢复到任意时间点？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-7-mysql的数据如何恢复到任意时间点？","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/163ffc62.html"}},[a._v("1.1.7 MySQL的数据如何恢复到任意时间点？")])],1),a._v(" "),r("h5",{attrs:{id:"_1-1-8-nfs-和-smb-是最常见的两种-nas（network-attached-storage）协议，当把一个文件系统同时通过-nfs-和-smb-协议共享给多个主机访问时，以下哪些说法是错误的"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-8-nfs-和-smb-是最常见的两种-nas（network-attached-storage）协议，当把一个文件系统同时通过-nfs-和-smb-协议共享给多个主机访问时，以下哪些说法是错误的","aria-hidden":"true"}},[a._v("#")]),a._v(" 1.1.8 NFS 和 SMB 是最常见的两种 NAS（Network Attached Storage）协议，当把一个文件系统同时通过 NFS 和 SMB 协议共享给多个主机访问时，以下哪些说法是错误的")]),a._v(" "),r("h5",{attrs:{id:"_1-1-9-输入-ping-ip-后敲回车，发包前会发生什么？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-9-输入-ping-ip-后敲回车，发包前会发生什么？","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/5dc96973.html"}},[a._v("1.1.9 输入 ping IP 后敲回车，发包前会发生什么？")])],1),a._v(" "),r("h5",{attrs:{id:"_1-2-0-请解释下为什么鹿晗发布恋情的时候，微博系统会崩溃，如何解决？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-0-请解释下为什么鹿晗发布恋情的时候，微博系统会崩溃，如何解决？","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/6f7d5809.html"}},[a._v("1.2.0 请解释下为什么鹿晗发布恋情的时候，微博系统会崩溃，如何解决？")])],1),a._v(" "),r("h5",{attrs:{id:"_1-2-1-现有一批邮件需要发送给订阅顾客，且有一个集群（集群的节点数不定，会动态扩容缩容）来负责具体的邮件发送任务，如何让系统尽快地完成发送？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-1-现有一批邮件需要发送给订阅顾客，且有一个集群（集群的节点数不定，会动态扩容缩容）来负责具体的邮件发送任务，如何让系统尽快地完成发送？","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/064a079d.html"}},[a._v("1.2.1 现有一批邮件需要发送给订阅顾客，且有一个集群（集群的节点数不定，会动态扩容缩容）来负责具体的邮件发送任务，如何让系统尽快地完成发送？")])],1),a._v(" "),r("h5",{attrs:{id:"_1-2-2-有一批气象观测站，现需要获取这些站点的观测数据，并存储到-hive-中。但是气象局只提供了-api-查询，每次只能查询单个观测点。那么如果能够方便快速地获取到所有的观测点的数据？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-2-有一批气象观测站，现需要获取这些站点的观测数据，并存储到-hive-中。但是气象局只提供了-api-查询，每次只能查询单个观测点。那么如果能够方便快速地获取到所有的观测点的数据？","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/6a20621a.html"}},[a._v("1.2.2 有一批气象观测站，现需要获取这些站点的观测数据，并存储到 Hive 中。但是气象局只提供了 api 查询，每次只能查询单个观测点。那么如果能够方便快速地获取到所有的观测点的数据？")])],1),a._v(" "),r("h5",{attrs:{id:"_1-2-3-如何实现两金额数据相加（最多小数点两位）"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-3-如何实现两金额数据相加（最多小数点两位）","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/96135c8b.html"}},[a._v("1.2.3 如何实现两金额数据相加（最多小数点两位）")])],1),a._v(" "),r("h5",{attrs:{id:"_1-2-4-关于并行计算的一些基础开放问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-4-关于并行计算的一些基础开放问题","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/f61b3cc2.html"}},[a._v("1.2.4 关于并行计算的一些基础开放问题")])],1),a._v(" "),r("h5",{attrs:{id:"_1-2-5-请计算xilinx公司vu9p芯片的算力相当于多少tops，给出计算过程与公式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-5-请计算xilinx公司vu9p芯片的算力相当于多少tops，给出计算过程与公式","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/28f10bba.html"}},[a._v("1.2.5 请计算XILINX公司VU9P芯片的算力相当于多少TOPS，给出计算过程与公式")])],1),a._v(" "),r("h5",{attrs:{id:"_1-2-6-一颗现代处理器，每秒大概可以执行多少条简单的mov指令，有哪些主要的影响因素"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-6-一颗现代处理器，每秒大概可以执行多少条简单的mov指令，有哪些主要的影响因素","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/4413ec27.html"}},[a._v("1.2.6 一颗现代处理器，每秒大概可以执行多少条简单的MOV指令，有哪些主要的影响因素")])],1),a._v(" "),r("h5",{attrs:{id:"_1-2-7-请分析-maxcompute-产品与分布式技术的关系、当前大数据计算平台类产品的市场现状和发展趋势"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-7-请分析-maxcompute-产品与分布式技术的关系、当前大数据计算平台类产品的市场现状和发展趋势","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/0edf66d5.html"}},[a._v("1.2.7 请分析 MaxCompute 产品与分布式技术的关系、当前大数据计算平台类产品的市场现状和发展趋势")])],1),a._v(" "),r("h5",{attrs:{id:"_1-2-8-对大数据平台中的元数据管理是怎么理解的，元数据收集管理体系是怎么样的，会对大数据应用有什么样的影响"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-8-对大数据平台中的元数据管理是怎么理解的，元数据收集管理体系是怎么样的，会对大数据应用有什么样的影响","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/64323238.html"}},[a._v("1.2.8 对大数据平台中的元数据管理是怎么理解的，元数据收集管理体系是怎么样的，会对大数据应用有什么样的影响")])],1),a._v(" "),r("h5",{attrs:{id:"_1-2-9-你理解常见如阿里，和友商大数据平台的技术体系差异以及发展趋势和技术瓶颈，在存储和计算两个方面进行概述"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-9-你理解常见如阿里，和友商大数据平台的技术体系差异以及发展趋势和技术瓶颈，在存储和计算两个方面进行概述","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/e20a4753.html"}},[a._v("1.2.9 你理解常见如阿里，和友商大数据平台的技术体系差异以及发展趋势和技术瓶颈，在存储和计算两个方面进行概述")])],1),a._v(" "),r("h5",{attrs:{id:"_1-3-0-在云计算大数据处理场景中，每天运行着成千上万的任务，每个任务都要进行-io-读写。存储系统为了更好的服务，经常会保证高优先级的任务优先执行。当多个作业或用户访问存储系统时-如何保证优先级和公平性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-0-在云计算大数据处理场景中，每天运行着成千上万的任务，每个任务都要进行-io-读写。存储系统为了更好的服务，经常会保证高优先级的任务优先执行。当多个作业或用户访问存储系统时-如何保证优先级和公平性","aria-hidden":"true"}},[a._v("#")]),a._v(" 1.3.0 在云计算大数据处理场景中，每天运行着成千上万的任务，每个任务都要进行 IO 读写。存储系统为了更好的服务，经常会保证高优先级的任务优先执行。当多个作业或用户访问存储系统时,如何保证优先级和公平性")]),a._v(" "),r("h5",{attrs:{id:"_1-3-1-最大频率栈"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-1-最大频率栈","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/fb42bfd1.html"}},[a._v("1.3.1 最大频率栈")])],1),a._v(" "),r("h5",{attrs:{id:"_1-3-2-给定一个链表，删除链表的倒数第n个节点，并且返回链表的头结点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-2-给定一个链表，删除链表的倒数第n个节点，并且返回链表的头结点","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/e1f26fcd.html"}},[a._v("1.3.2 给定一个链表，删除链表的倒数第N个节点，并且返回链表的头结点")])],1),a._v(" "),r("h5",{attrs:{id:"_1-3-3-如果让你设计一个通用的、支持各种数据库秒级备份和恢复的系统，你会如何设计"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-3-如果让你设计一个通用的、支持各种数据库秒级备份和恢复的系统，你会如何设计","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/225ec0d1.html"}},[a._v("1.3.3 如果让你设计一个通用的、支持各种数据库秒级备份和恢复的系统，你会如何设计")])],1),a._v(" "),r("h5",{attrs:{id:"_1-3-4-如果让你来设计一个支持数据库、nosql-和大数据之间数据实时流动的数据流及处理的系统，你会考虑哪些问题？如何设计？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-4-如果让你来设计一个支持数据库、nosql-和大数据之间数据实时流动的数据流及处理的系统，你会考虑哪些问题？如何设计？","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/12f4e739.html"}},[a._v("1.3.4 如果让你来设计一个支持数据库、NOSQL 和大数据之间数据实时流动的数据流及处理的系统，你会考虑哪些问题？如何设计？")])],1),a._v(" "),r("h5",{attrs:{id:"_1-3-5-给定一个整数数组和一个整数，返回两个数组的索引，这两个索引指向的数字的加和等于指定的整数。需要最优的算法，分析算法的空间和时间复杂度"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-5-给定一个整数数组和一个整数，返回两个数组的索引，这两个索引指向的数字的加和等于指定的整数。需要最优的算法，分析算法的空间和时间复杂度","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/dced3589.html"}},[a._v("1.3.5 给定一个整数数组和一个整数，返回两个数组的索引，这两个索引指向的数字的加和等于指定的整数。需要最优的算法，分析算法的空间和时间复杂度")])],1),a._v(" "),r("h5",{attrs:{id:"_1-3-6-假如给你一个新产品，你将从哪些方面来保障它的质量？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-6-假如给你一个新产品，你将从哪些方面来保障它的质量？","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/e75b416e.html"}},[a._v("1.3.6 假如给你一个新产品，你将从哪些方面来保障它的质量？")])],1),a._v(" "),r("h5",{attrs:{id:"_1-3-7-请评估一下程序的执行结果？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-7-请评估一下程序的执行结果？","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/ba3d0a72.html"}},[a._v("1.3.7 请评估一下程序的执行结果？")])],1),a._v(" "),r("br"),a._v(" "),r("h3",{attrs:{id:"华为篇"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#华为篇","aria-hidden":"true"}},[a._v("#")]),a._v(" 华为篇")]),a._v(" "),r("br"),a._v(" "),r("h5",{attrs:{id:"_2-1-0-static有什么用途？（请至少说明两种）"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-0-static有什么用途？（请至少说明两种）","aria-hidden":"true"}},[a._v("#")]),a._v(" 2.1.0 static有什么用途？（请至少说明两种）")]),a._v(" "),r("h6",{attrs:{id:"_2-1-1-引用与指针有什么区别？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-1-引用与指针有什么区别？","aria-hidden":"true"}},[a._v("#")]),a._v(" 2.1.1 引用与指针有什么区别？")]),a._v(" "),r("h5",{attrs:{id:"_2-1-2-描述实时系统的基本特性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-2-描述实时系统的基本特性","aria-hidden":"true"}},[a._v("#")]),a._v(" 2.1.2 描述实时系统的基本特性")]),a._v(" "),r("h5",{attrs:{id:"_2-1-3-全局变量和局部变量在内存中是否有区别？如果有，是什么区别？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-3-全局变量和局部变量在内存中是否有区别？如果有，是什么区别？","aria-hidden":"true"}},[a._v("#")]),a._v(" 2.1.3 全局变量和局部变量在内存中是否有区别？如果有，是什么区别？")]),a._v(" "),r("h5",{attrs:{id:"_2-1-4-什么是平衡二叉树？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-4-什么是平衡二叉树？","aria-hidden":"true"}},[a._v("#")]),a._v(" 2.1.4 什么是平衡二叉树？")]),a._v(" "),r("h5",{attrs:{id:"_2-1-5-堆栈溢出一般是由什么原因导致的？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-5-堆栈溢出一般是由什么原因导致的？","aria-hidden":"true"}},[a._v("#")]),a._v(" 2.1.5 堆栈溢出一般是由什么原因导致的？")]),a._v(" "),r("h5",{attrs:{id:"_2-1-6-什么函数不能声明为虚函数？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-6-什么函数不能声明为虚函数？","aria-hidden":"true"}},[a._v("#")]),a._v(" 2.1.6 什么函数不能声明为虚函数？")]),a._v(" "),r("h5",{attrs:{id:"_2-1-7-冒泡排序算法的时间复杂度是什么？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-7-冒泡排序算法的时间复杂度是什么？","aria-hidden":"true"}},[a._v("#")]),a._v(" 2.1.7 冒泡排序算法的时间复杂度是什么？")]),a._v(" "),r("h5",{attrs:{id:"_2-1-8-写出float-x-与“零值”比较的if语句"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-8-写出float-x-与“零值”比较的if语句","aria-hidden":"true"}},[a._v("#")]),a._v(" 2.1.8 写出float x 与“零值”比较的if语句")]),a._v(" "),r("h5",{attrs:{id:"_2-1-9-internet采用哪种网络协议？该协议的主要层次结构？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-9-internet采用哪种网络协议？该协议的主要层次结构？","aria-hidden":"true"}},[a._v("#")]),a._v(" 2.1.9 Internet采用哪种网络协议？该协议的主要层次结构？")]),a._v(" "),r("h5",{attrs:{id:"_2-2-0-internet物理地址和ip地址转换采用什么协议？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-0-internet物理地址和ip地址转换采用什么协议？","aria-hidden":"true"}},[a._v("#")]),a._v(" 2.2.0 Internet物理地址和IP地址转换采用什么协议？")]),a._v(" "),r("h5",{attrs:{id:"_2-2-1-ip地址的编码分为哪俩部分？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-1-ip地址的编码分为哪俩部分？","aria-hidden":"true"}},[a._v("#")]),a._v(" 2.2.1 IP地址的编码分为哪俩部分？")]),a._v(" "),r("h5",{attrs:{id:"_2-2-2-用户输入m-n值，从1至n开始顺序循环数数，每数到m输出该数值，直至全部输出。写出c程序。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-2-用户输入m-n值，从1至n开始顺序循环数数，每数到m输出该数值，直至全部输出。写出c程序。","aria-hidden":"true"}},[a._v("#")]),a._v(" 2.2.2 用户输入M,N值，从1至N开始顺序循环数数，每数到M输出该数值，直至全部输出。写出C程序。")]),a._v(" "),r("h5",{attrs:{id:"_2-2-3-不能做switch-的参数类型是"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-3-不能做switch-的参数类型是","aria-hidden":"true"}},[a._v("#")]),a._v(" 2.2.3 不能做switch()的参数类型是")]),a._v(" "),r("h5",{attrs:{id:"_2-2-4-int-a-nsize-，其中隐藏着若干0，其余非0整数，写一个函数int-func-int-a-int-nsize-，使a把0移至后面，非0整数移至数组前面并保持有序，返回值为原数据中第一个元素为0的下标。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-4-int-a-nsize-，其中隐藏着若干0，其余非0整数，写一个函数int-func-int-a-int-nsize-，使a把0移至后面，非0整数移至数组前面并保持有序，返回值为原数据中第一个元素为0的下标。","aria-hidden":"true"}},[a._v("#")]),a._v(" 2.2.4 int A[nSize]，其中隐藏着若干0，其余非0整数，写一个函数int Func(int* A, int nSize)，使A把0移至后面，非0整数移至数组前面并保持有序，返回值为原数据中第一个元素为0的下标。")]),a._v(" "),r("h5",{attrs:{id:"_2-2-5-写一个程序-要求功能：求出用1，2，5这三个数不同个数组合的和为100的组合个数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-5-写一个程序-要求功能：求出用1，2，5这三个数不同个数组合的和为100的组合个数","aria-hidden":"true"}},[a._v("#")]),a._v(" 2.2.5 写一个程序, 要求功能：求出用1，2，5这三个数不同个数组合的和为100的组合个数")]),a._v(" "),r("h5",{attrs:{id:"_2-2-6-实现一个函数，把一个字符串中的字符从小写转为大写"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-6-实现一个函数，把一个字符串中的字符从小写转为大写","aria-hidden":"true"}},[a._v("#")]),a._v(" 2.2.6 实现一个函数，把一个字符串中的字符从小写转为大写")]),a._v(" "),r("h5",{attrs:{id:"_2-2-7-随机输入一个数，判断它是不是对称数（回文数）（如3，121，12321，45254）。不能用字符串库函数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-7-随机输入一个数，判断它是不是对称数（回文数）（如3，121，12321，45254）。不能用字符串库函数","aria-hidden":"true"}},[a._v("#")]),a._v(" 2.2.7 随机输入一个数，判断它是不是对称数（回文数）（如3，121，12321，45254）。不能用字符串库函数")]),a._v(" "),r("h5",{attrs:{id:"_2-2-8-求2-2000的所有素数-有足够的内存-要求尽量快"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-8-求2-2000的所有素数-有足够的内存-要求尽量快","aria-hidden":"true"}},[a._v("#")]),a._v(" 2.2.8 求2~2000的所有素数.有足够的内存,要求尽量快")]),a._v(" "),r("h5",{attrs:{id:"_2-2-9-a-b-c-d四个进程，a向buf里面写数据，b-c-d向buf里面读数据，当a写完，且b，c，d都读一次后，a才能再写。用p，v操作实现。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-9-a-b-c-d四个进程，a向buf里面写数据，b-c-d向buf里面读数据，当a写完，且b，c，d都读一次后，a才能再写。用p，v操作实现。","aria-hidden":"true"}},[a._v("#")]),a._v(" 2.2.9 A,B,C,D四个进程，A向buf里面写数据，B,C,D向buf里面读数据，当A写完，且B，C，D都读一次后，A才能再写。用P，V操作实现。")]),a._v(" "),r("h5",{attrs:{id:"_2-3-0-将单向链表reverse，如abcd变成dcba，只能搜索链表一次。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-0-将单向链表reverse，如abcd变成dcba，只能搜索链表一次。","aria-hidden":"true"}},[a._v("#")]),a._v(" 2.3.0 将单向链表reverse，如ABCD变成DCBA，只能搜索链表一次。")]),a._v(" "),r("h5",{attrs:{id:"_2-3-1-将二叉树的两个孩子换位置，即左变右，右变左。不能用递规。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-1-将二叉树的两个孩子换位置，即左变右，右变左。不能用递规。","aria-hidden":"true"}},[a._v("#")]),a._v(" 2.3.1 将二叉树的两个孩子换位置，即左变右，右变左。不能用递规。")]),a._v(" "),r("h5",{attrs:{id:"_2-3-2-以下属于物理层的设备是？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-2-以下属于物理层的设备是？","aria-hidden":"true"}},[a._v("#")]),a._v(" 2.3.2 以下属于物理层的设备是？")]),a._v(" "),r("h5",{attrs:{id:"_2-3-3-在以太网中，是根据（）地址来区分不同的设备的？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-3-在以太网中，是根据（）地址来区分不同的设备的？","aria-hidden":"true"}},[a._v("#")]),a._v(" 2.3.3 在以太网中，是根据（）地址来区分不同的设备的？")]),a._v(" "),r("h5",{attrs:{id:"_2-3-4-以下为传输层协议的是？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-4-以下为传输层协议的是？","aria-hidden":"true"}},[a._v("#")]),a._v(" 2.3.4 以下为传输层协议的是？")]),a._v(" "),r("h5",{attrs:{id:"_2-3-5-以下对mac地址描述正确的是？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-5-以下对mac地址描述正确的是？","aria-hidden":"true"}},[a._v("#")]),a._v(" 2.3.5 以下对MAC地址描述正确的是？")]),a._v(" "),r("h5",{attrs:{id:"_2-3-6-以下属于数据链路层功能的是？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-6-以下属于数据链路层功能的是？","aria-hidden":"true"}},[a._v("#")]),a._v(" 2.3.6 以下属于数据链路层功能的是？")]),a._v(" "),r("h5",{attrs:{id:"_2-3-7-ieee802-3u标准是指？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-7-ieee802-3u标准是指？","aria-hidden":"true"}},[a._v("#")]),a._v(" 2.3.7 IEEE802.3u标准是指？")]),a._v(" "),r("h5",{attrs:{id:"_2-3-8-如果要将两计算机通过双绞线直接连接，正确的线序是？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-8-如果要将两计算机通过双绞线直接连接，正确的线序是？","aria-hidden":"true"}},[a._v("#")]),a._v(" 2.3.8 如果要将两计算机通过双绞线直接连接，正确的线序是？")]),a._v(" "),r("h5",{attrs:{id:"_2-3-9-在v-35和v-24规程中，控制信号rts表示？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-9-在v-35和v-24规程中，控制信号rts表示？","aria-hidden":"true"}},[a._v("#")]),a._v(" 2.3.9 在V.35和V.24规程中，控制信号RTS表示？")]),a._v(" "),r("h5",{attrs:{id:"_2-4-0-路由器作为网络互连设备，必须具备以下哪些特点？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-0-路由器作为网络互连设备，必须具备以下哪些特点？","aria-hidden":"true"}},[a._v("#")]),a._v(" 2.4.0 路由器作为网络互连设备，必须具备以下哪些特点？")]),a._v(" "),r("h5",{attrs:{id:"_2-4-1-路由器的作用有？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-1-路由器的作用有？","aria-hidden":"true"}},[a._v("#")]),a._v(" 2.4.1 路由器的作用有？")]),a._v(" "),r("h5",{attrs:{id:"_2-4-2-调用上一条历史命令的快捷键是？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-2-调用上一条历史命令的快捷键是？","aria-hidden":"true"}},[a._v("#")]),a._v(" 2.4.2 调用上一条历史命令的快捷键是？")]),a._v(" "),r("h5",{attrs:{id:"_2-4-3-交换机工作在osi七层的哪一层？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-3-交换机工作在osi七层的哪一层？","aria-hidden":"true"}},[a._v("#")]),a._v(" 2.4.3 交换机工作在OSI七层的哪一层？")]),a._v(" "),r("h5",{attrs:{id:"_2-4-4-以下对csma-cd描述正确的是？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-4-以下对csma-cd描述正确的是？","aria-hidden":"true"}},[a._v("#")]),a._v(" 2.4.4 以下对CSMA/CD描述正确的是？")]),a._v(" "),r("h5",{attrs:{id:"_2-4-5-以下对store-andforward描述正确的是？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-5-以下对store-andforward描述正确的是？","aria-hidden":"true"}},[a._v("#")]),a._v(" 2.4.5 以下对STORE ANDFORWARD描述正确的是？")]),a._v(" "),r("h5",{attrs:{id:"_2-4-6-以下对交换机工作方式描述正确的是？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-6-以下对交换机工作方式描述正确的是？","aria-hidden":"true"}},[a._v("#")]),a._v(" 2.4.6 以下对交换机工作方式描述正确的是？")]),a._v(" "),r("h5",{attrs:{id:"_2-4-7-vlan的主要作用有？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-7-vlan的主要作用有？","aria-hidden":"true"}},[a._v("#")]),a._v(" 2.4.7 VLAN的主要作用有？")]),a._v(" "),r("h5",{attrs:{id:"_2-4-8-在交换机中用户权限分为几个级别？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-8-在交换机中用户权限分为几个级别？","aria-hidden":"true"}},[a._v("#")]),a._v(" 2.4.8 在交换机中用户权限分为几个级别？")]),a._v(" "),r("h5",{attrs:{id:"_2-4-9-在路由器的配置过程中查询以s开头所有命令的方法是？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-9-在路由器的配置过程中查询以s开头所有命令的方法是？","aria-hidden":"true"}},[a._v("#")]),a._v(" 2.4.9 在路由器的配置过程中查询以S开头所有命令的方法是？")]),a._v(" "),r("h5",{attrs:{id:"_2-5-0-第一次配置路由器时可以使用的方法为？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-0-第一次配置路由器时可以使用的方法为？","aria-hidden":"true"}},[a._v("#")]),a._v(" 2.5.0 第一次配置路由器时可以使用的方法为？")]),a._v(" "),r("h5",{attrs:{id:"_2-5-1-在何种状态下可以为路由器改名？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-1-在何种状态下可以为路由器改名？","aria-hidden":"true"}},[a._v("#")]),a._v(" 2.5.1 在何种状态下可以为路由器改名？")]),a._v(" "),r("h5",{attrs:{id:"_2-5-2-某公司申请到一个c类ip地址，但要连接6个的子公司，最大的一个子公司有-26台计算机，每个子公司在一个网段中，则子网掩码应设为？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-2-某公司申请到一个c类ip地址，但要连接6个的子公司，最大的一个子公司有-26台计算机，每个子公司在一个网段中，则子网掩码应设为？","aria-hidden":"true"}},[a._v("#")]),a._v(" 2.5.2 某公司申请到一个C类IP地址，但要连接6个的子公司，最大的一个子公司有 26台计算机，每个子公司在一个网段中，则子网掩码应设为？")]),a._v(" "),r("h5",{attrs:{id:"_2-5-3-与10-110-12-29mask-255-255-255-224属于同一网段的主机ip地址是？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-3-与10-110-12-29mask-255-255-255-224属于同一网段的主机ip地址是？","aria-hidden":"true"}},[a._v("#")]),a._v(" 2.5.3 与10.110.12.29mask 255.255.255.224属于同一网段的主机IP地址是？")]),a._v(" "),r("h5",{attrs:{id:"_2-5-4-arp协议的作用是？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-4-arp协议的作用是？","aria-hidden":"true"}},[a._v("#")]),a._v(" 2.5.4 ARP协议的作用是？")]),a._v(" "),r("h5",{attrs:{id:"_2-5-5-当路由器接收的ip报文的ttl值等于1时，采取的策略是？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-5-当路由器接收的ip报文的ttl值等于1时，采取的策略是？","aria-hidden":"true"}},[a._v("#")]),a._v(" 2.5.5 当路由器接收的IP报文的TTL值等于1时，采取的策略是？")]),a._v(" "),r("h5",{attrs:{id:"_2-5-6-在netware-网络中，客户需要访问某个类型的服务器时，首先要发送一个-（）广播报文来寻找服务器？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-6-在netware-网络中，客户需要访问某个类型的服务器时，首先要发送一个-（）广播报文来寻找服务器？","aria-hidden":"true"}},[a._v("#")]),a._v(" 2.5.6 在NetWare 网络中，客户需要访问某个类型的服务器时，首先要发送一个 （）广播报文来寻找服务器？")]),a._v(" "),r("h5",{attrs:{id:"_2-5-7-ipx地址网络地址有（-）个字节？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-7-ipx地址网络地址有（-）个字节？","aria-hidden":"true"}},[a._v("#")]),a._v(" 2.5.7 IPX地址网络地址有（ ）个字节？")]),a._v(" "),r("h5",{attrs:{id:"_2-5-8-对于帧中继描述正确的是？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-8-对于帧中继描述正确的是？","aria-hidden":"true"}},[a._v("#")]),a._v(" 2.5.8 对于帧中继描述正确的是？")]),a._v(" "),r("h5",{attrs:{id:"_2-5-9-对于inverse-arp的描述正确的是？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-9-对于inverse-arp的描述正确的是？","aria-hidden":"true"}},[a._v("#")]),a._v(" 2.5.9 对于INVERSE ARP的描述正确的是？")]),a._v(" "),r("br"),a._v(" "),r("h3",{attrs:{id:"百度篇"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#百度篇","aria-hidden":"true"}},[a._v("#")]),a._v(" 百度篇")]),a._v(" "),r("br"),a._v(" "),r("h5",{attrs:{id:"_3-1-0-在函数内定义一个字符数组，用gets函数输入字符串的时候，如果输入越界，为什么程序会崩溃？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-0-在函数内定义一个字符数组，用gets函数输入字符串的时候，如果输入越界，为什么程序会崩溃？","aria-hidden":"true"}},[a._v("#")]),a._v(" 3.1.0 在函数内定义一个字符数组，用gets函数输入字符串的时候，如果输入越界，为什么程序会崩溃？")]),a._v(" "),r("h5",{attrs:{id:"_3-1-1-c-中引用与指针的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-1-c-中引用与指针的区别","aria-hidden":"true"}},[a._v("#")]),a._v(" 3.1.1 C++中引用与指针的区别")]),a._v(" "),r("h5",{attrs:{id:"_3-1-2-c-c-程序的内存分区"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-2-c-c-程序的内存分区","aria-hidden":"true"}},[a._v("#")]),a._v(" 3.1.2 C/C++程序的内存分区")]),a._v(" "),r("h5",{attrs:{id:"_3-1-3-快速排序的思想、时间复杂度、实现以及优化方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-3-快速排序的思想、时间复杂度、实现以及优化方法","aria-hidden":"true"}},[a._v("#")]),a._v(" 3.1.3 快速排序的思想、时间复杂度、实现以及优化方法")]),a._v(" "),r("h5",{attrs:{id:"_3-1-4-io模型——io多路复用机制"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-4-io模型——io多路复用机制","aria-hidden":"true"}},[a._v("#")]),a._v(" 3.1.4 IO模型——IO多路复用机制?")]),a._v(" "),r("h5",{attrs:{id:"_3-1-5-常用的linux命令"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-5-常用的linux命令","aria-hidden":"true"}},[a._v("#")]),a._v(" 3.1.5 常用的Linux命令")]),a._v(" "),r("h5",{attrs:{id:"_3-1-6-c中变量的存储类型有哪些？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-6-c中变量的存储类型有哪些？","aria-hidden":"true"}},[a._v("#")]),a._v(" 3.1.6 C中变量的存储类型有哪些？")]),a._v(" "),r("h5",{attrs:{id:"_3-1-7-动态规划的本质"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-7-动态规划的本质","aria-hidden":"true"}},[a._v("#")]),a._v(" 3.1.7 动态规划的本质")]),a._v(" "),r("h5",{attrs:{id:"_3-1-8-实践中如何优化mysql"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-8-实践中如何优化mysql","aria-hidden":"true"}},[a._v("#")]),a._v(" 3.1.8 实践中如何优化MySQL?")]),a._v(" "),r("h5",{attrs:{id:"_3-1-9-什么情况下设置了索引但无法使用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-9-什么情况下设置了索引但无法使用","aria-hidden":"true"}},[a._v("#")]),a._v(" 3.1.9 什么情况下设置了索引但无法使用?")]),a._v(" "),r("h5",{attrs:{id:"_3-2-0-sql语句的优化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-0-sql语句的优化","aria-hidden":"true"}},[a._v("#")]),a._v(" 3.2.0 SQL语句的优化")]),a._v(" "),r("h5",{attrs:{id:"_3-2-1-数据库索引的底层实现原理和优化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-1-数据库索引的底层实现原理和优化","aria-hidden":"true"}},[a._v("#")]),a._v(" 3.2.1 数据库索引的底层实现原理和优化")]),a._v(" "),r("h5",{attrs:{id:"_3-2-2-http和https的主要区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-2-http和https的主要区别","aria-hidden":"true"}},[a._v("#")]),a._v(" 3.2.2 HTTP和HTTPS的主要区别?")]),a._v(" "),r("h5",{attrs:{id:"_3-2-3-如何设计一个高并发的系统"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-3-如何设计一个高并发的系统","aria-hidden":"true"}},[a._v("#")]),a._v(" 3.2.3 如何设计一个高并发的系统?")]),a._v(" "),r("h5",{attrs:{id:"_3-2-4-两条相交的单向链表，如何求他们的第一个公共节点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-4-两条相交的单向链表，如何求他们的第一个公共节点","aria-hidden":"true"}},[a._v("#")]),a._v(" 3.2.4 两条相交的单向链表，如何求他们的第一个公共节点?")]),a._v(" "),r("h5",{attrs:{id:"_3-2-5-求单向局部循环链表的环入口"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-5-求单向局部循环链表的环入口","aria-hidden":"true"}},[a._v("#")]),a._v(" 3.2.5 求单向局部循环链表的环入口?")]),a._v(" "),r("h5",{attrs:{id:"_3-2-6-ip地址如何在数据库中存储"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-6-ip地址如何在数据库中存储","aria-hidden":"true"}},[a._v("#")]),a._v(" 3.2.6 IP地址如何在数据库中存储?")]),a._v(" "),r("h5",{attrs:{id:"_3-2-7-new-delete和malloc-free的底层实现"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-7-new-delete和malloc-free的底层实现","aria-hidden":"true"}},[a._v("#")]),a._v(" 3.2.7 new/delete和malloc/free的底层实现?")]),a._v(" "),r("h5",{attrs:{id:"_3-2-8-overload、override、overwrite的介绍"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-8-overload、override、overwrite的介绍","aria-hidden":"true"}},[a._v("#")]),a._v(" 3.2.8 overload、override、overwrite的介绍?")]),a._v(" "),r("h5",{attrs:{id:"_3-2-9-小端-大端机器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-9-小端-大端机器","aria-hidden":"true"}},[a._v("#")]),a._v(" 3.2.9 小端/大端机器?")]),a._v(" "),r("h5",{attrs:{id:"_3-3-0-守护进程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-0-守护进程","aria-hidden":"true"}},[a._v("#")]),a._v(" 3.3.0 守护进程")]),a._v(" "),r("h5",{attrs:{id:"_3-3-1-多线程的优缺点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-1-多线程的优缺点","aria-hidden":"true"}},[a._v("#")]),a._v(" 3.3.1 多线程的优缺点")]),a._v(" "),r("h5",{attrs:{id:"_3-3-2-长连接与短连接"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-2-长连接与短连接","aria-hidden":"true"}},[a._v("#")]),a._v(" 3.3.2 长连接与短连接")]),a._v(" "),r("h5",{attrs:{id:"_3-3-3-二分图应用于最佳匹配问题（游客对房间的满意度之和最大问题）"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-3-二分图应用于最佳匹配问题（游客对房间的满意度之和最大问题）","aria-hidden":"true"}},[a._v("#")]),a._v(" 3.3.3 二分图应用于最佳匹配问题（游客对房间的满意度之和最大问题）")]),a._v(" "),r("h5",{attrs:{id:"_3-3-4-class与struct的区别？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-4-class与struct的区别？","aria-hidden":"true"}},[a._v("#")]),a._v(" 3.3.4 class与struct的区别？")]),a._v(" "),r("h5",{attrs:{id:"_3-3-5-虚函数和纯虚函数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-5-虚函数和纯虚函数","aria-hidden":"true"}},[a._v("#")]),a._v(" 3.3.5 虚函数和纯虚函数")]),a._v(" "),r("h5",{attrs:{id:"_3-3-6-menset-函数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-6-menset-函数","aria-hidden":"true"}},[a._v("#")]),a._v(" 3.3.6 menset()函数")]),a._v(" "),r("h5",{attrs:{id:"_3-3-7-实现一个函数，对一个正整数n，算得到1需要的最少操作次数。操作规则为：如果n为偶数，将其除以2；如果n为奇数，可以加1或减1；一直处理下去。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-7-实现一个函数，对一个正整数n，算得到1需要的最少操作次数。操作规则为：如果n为偶数，将其除以2；如果n为奇数，可以加1或减1；一直处理下去。","aria-hidden":"true"}},[a._v("#")]),a._v(" 3.3.7 实现一个函数，对一个正整数n，算得到1需要的最少操作次数。操作规则为：如果n为偶数，将其除以2；如果n为奇数，可以加1或减1；一直处理下去。")]),a._v(" "),r("h5",{attrs:{id:"_3-3-8-找到满足条件的数组"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-8-找到满足条件的数组","aria-hidden":"true"}},[a._v("#")]),a._v(" 3.3.8 找到满足条件的数组")]),a._v(" "),r("h5",{attrs:{id:"_3-3-9-一个大的含有50m个url的记录，一个小的含有500个url的记录，找出两个记录里相同的url"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-9-一个大的含有50m个url的记录，一个小的含有500个url的记录，找出两个记录里相同的url","aria-hidden":"true"}},[a._v("#")]),a._v(" 3.3.9 一个大的含有50M个URL的记录，一个小的含有500个URL的记录，找出两个记录里相同的URL")]),a._v(" "),r("h5",{attrs:{id:"_3-4-0-海量日志数据，提取出某日访问百度次数最多的那个ip"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-0-海量日志数据，提取出某日访问百度次数最多的那个ip","aria-hidden":"true"}},[a._v("#")]),a._v(" 3.4.0 海量日志数据，提取出某日访问百度次数最多的那个IP")]),a._v(" "),r("h5",{attrs:{id:"_3-4-1-有10个文件，每个文件1g，每个文件的每一行都存放的是用户的query，每个文件的query都可能重复。如何按照query的频度排序？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-1-有10个文件，每个文件1g，每个文件的每一行都存放的是用户的query，每个文件的query都可能重复。如何按照query的频度排序？","aria-hidden":"true"}},[a._v("#")]),a._v(" 3.4.1 有10个文件，每个文件1G，每个文件的每一行都存放的是用户的query，每个文件的query都可能重复。如何按照query的频度排序？")]),a._v(" "),r("h5",{attrs:{id:"_3-4-2-蚂蚁爬杆问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-2-蚂蚁爬杆问题","aria-hidden":"true"}},[a._v("#")]),a._v(" 3.4.2 蚂蚁爬杆问题")]),a._v(" "),r("h5",{attrs:{id:"_3-4-3-当在浏览器中输入一个url后回车，后台发生了什么？比如输入url后，你看到了百度的首页，那么这一切是如何发生的呢？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-3-当在浏览器中输入一个url后回车，后台发生了什么？比如输入url后，你看到了百度的首页，那么这一切是如何发生的呢？","aria-hidden":"true"}},[a._v("#")]),a._v(" 3.4.3 当在浏览器中输入一个url后回车，后台发生了什么？比如输入url后，你看到了百度的首页，那么这一切是如何发生的呢？")]),a._v(" "),r("h5",{attrs:{id:"_3-4-4-判断两棵树是否相等，请实现两棵树是否相等的比较，相等返回1，否则返回其他值，并说明算法复杂度"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-4-判断两棵树是否相等，请实现两棵树是否相等的比较，相等返回1，否则返回其他值，并说明算法复杂度","aria-hidden":"true"}},[a._v("#")]),a._v(" 3.4.4 判断两棵树是否相等，请实现两棵树是否相等的比较，相等返回1，否则返回其他值，并说明算法复杂度")]),a._v(" "),r("h5",{attrs:{id:"_3-4-5-三个警察和三个囚徒的过河问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-5-三个警察和三个囚徒的过河问题","aria-hidden":"true"}},[a._v("#")]),a._v(" 3.4.5 三个警察和三个囚徒的过河问题")]),a._v(" "),r("h5",{attrs:{id:"_3-4-6-从300万字符串中找到最热门的10条"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-6-从300万字符串中找到最热门的10条","aria-hidden":"true"}},[a._v("#")]),a._v(" 3.4.6 从300万字符串中找到最热门的10条")]),a._v(" "),r("h5",{attrs:{id:"_3-4-7-如何找出字典中的兄弟单词。给定一个单词a，如果通过交换单词中字母的顺序可以得到另外的单词b，那么定义b是a的兄弟单词。现在给定一个字典，用户输入一个单词，如何根据字典找出这个单词有多少个兄弟单词？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-7-如何找出字典中的兄弟单词。给定一个单词a，如果通过交换单词中字母的顺序可以得到另外的单词b，那么定义b是a的兄弟单词。现在给定一个字典，用户输入一个单词，如何根据字典找出这个单词有多少个兄弟单词？","aria-hidden":"true"}},[a._v("#")]),a._v(" 3.4.7 如何找出字典中的兄弟单词。给定一个单词a，如果通过交换单词中字母的顺序可以得到另外的单词b，那么定义b是a的兄弟单词。现在给定一个字典，用户输入一个单词，如何根据字典找出这个单词有多少个兄弟单词？")]),a._v(" "),r("h5",{attrs:{id:"_3-4-8-找出数组中出现次数超过一半的数，现在有一个数组，已知一个数出现的次数超过了一半，请用o-n-的复杂度的算法找出这个数。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-8-找出数组中出现次数超过一半的数，现在有一个数组，已知一个数出现的次数超过了一半，请用o-n-的复杂度的算法找出这个数。","aria-hidden":"true"}},[a._v("#")]),a._v(" 3.4.8 找出数组中出现次数超过一半的数，现在有一个数组，已知一个数出现的次数超过了一半，请用O(n)的复杂度的算法找出这个数。")]),a._v(" "),r("h5",{attrs:{id:"_3-4-9-找出被修改过的数字"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-9-找出被修改过的数字","aria-hidden":"true"}},[a._v("#")]),a._v(" 3.4.9 找出被修改过的数字")]),a._v(" "),r("h5",{attrs:{id:"_3-5-0-设计dns服务器中cache的数据结构。要求设计一个dns的cache结构，要求能够满足每秒5000以上的查询，满足ip数据的快速插入，查询的速度要快。（题目还给出了一系列的数据，比如：站点数总共为5000万，ip地址有1000万，等等）"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-0-设计dns服务器中cache的数据结构。要求设计一个dns的cache结构，要求能够满足每秒5000以上的查询，满足ip数据的快速插入，查询的速度要快。（题目还给出了一系列的数据，比如：站点数总共为5000万，ip地址有1000万，等等）","aria-hidden":"true"}},[a._v("#")]),a._v(" 3.5.0 设计DNS服务器中cache的数据结构。要求设计一个DNS的Cache结构，要求能够满足每秒5000以上的查询，满足IP数据的快速插入，查询的速度要快。（题目还给出了一系列的数据，比如：站点数总共为5000万，IP地址有1000万，等等）")]),a._v(" "),r("h5",{attrs:{id:"_3-5-1-找出给定字符串对应的序号"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-1-找出给定字符串对应的序号","aria-hidden":"true"}},[a._v("#")]),a._v(" 3.5.1 找出给定字符串对应的序号")]),a._v(" "),r("h5",{attrs:{id:"_3-5-2-找出第k大的数字所在的位置。写一段程序，找出数组中第k大小的数，输出数所在的位置。例如-2，4，3，4，7-中，第一大的数是7，位置在4。第二大、第三大的数都是4，位置在1、3随便输出哪一个均可。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-2-找出第k大的数字所在的位置。写一段程序，找出数组中第k大小的数，输出数所在的位置。例如-2，4，3，4，7-中，第一大的数是7，位置在4。第二大、第三大的数都是4，位置在1、3随便输出哪一个均可。","aria-hidden":"true"}},[a._v("#")]),a._v(" 3.5.2 找出第k大的数字所在的位置。写一段程序，找出数组中第k大小的数，输出数所在的位置。例如{2，4，3，4，7}中，第一大的数是7，位置在4。第二大、第三大的数都是4，位置在1、3随便输出哪一个均可。")]),a._v(" "),r("h5",{attrs:{id:"_3-5-3-给40亿个不重复的unsigned-int的整数，没排过序的，然后再给几个数，如何快速判断这几个数是否在那40亿个数当中"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-3-给40亿个不重复的unsigned-int的整数，没排过序的，然后再给几个数，如何快速判断这几个数是否在那40亿个数当中","aria-hidden":"true"}},[a._v("#")]),a._v(" 3.5.3 给40亿个不重复的unsigned int的整数，没排过序的，然后再给几个数，如何快速判断这几个数是否在那40亿个数当中?")]),a._v(" "),r("h5",{attrs:{id:"_3-5-4-在一个文件中有10g个整数，乱序排列，要求找出中位数。内存限制为2g。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-4-在一个文件中有10g个整数，乱序排列，要求找出中位数。内存限制为2g。","aria-hidden":"true"}},[a._v("#")]),a._v(" 3.5.4 在一个文件中有10G个整数，乱序排列，要求找出中位数。内存限制为2G。")]),a._v(" "),r("h5",{attrs:{id:"_3-5-5-时分秒针在一天之类重合多少次？（24小时）"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-5-时分秒针在一天之类重合多少次？（24小时）","aria-hidden":"true"}},[a._v("#")]),a._v(" 3.5.5 时分秒针在一天之类重合多少次？（24小时）")]),a._v(" "),r("h5",{attrs:{id:"_3-5-6-将多个集合合并成没有交集的集合。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-6-将多个集合合并成没有交集的集合。","aria-hidden":"true"}},[a._v("#")]),a._v(" 3.5.6 将多个集合合并成没有交集的集合。")]),a._v(" "),r("h5",{attrs:{id:"_3-5-7-平面内有11个点，由它们连成48条不同的直线，由这些点可连成多少个三角形？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-7-平面内有11个点，由它们连成48条不同的直线，由这些点可连成多少个三角形？","aria-hidden":"true"}},[a._v("#")]),a._v(" 3.5.7 平面内有11个点，由它们连成48条不同的直线，由这些点可连成多少个三角形？")]),a._v(" "),r("br"),a._v(" "),r("h3",{attrs:{id:"腾讯篇"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#腾讯篇","aria-hidden":"true"}},[a._v("#")]),a._v(" 腾讯篇")]),a._v(" "),r("br"),a._v(" "),r("h4",{attrs:{id:"java基础"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#java基础","aria-hidden":"true"}},[a._v("#")]),a._v(" Java基础")]),a._v(" "),r("h5",{attrs:{id:"_4-1-0-java中的几种基本数据类型是什么，各自占用多少字节。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-0-java中的几种基本数据类型是什么，各自占用多少字节。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.1.0 JAVA中的几种基本数据类型是什么，各自占用多少字节。")]),a._v(" "),r("h5",{attrs:{id:"_4-1-1-string类能被继承吗，为什么。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-1-string类能被继承吗，为什么。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.1.1 String类能被继承吗，为什么。")]),a._v(" "),r("h5",{attrs:{id:"_4-1-2-string，stringbuffer，stringbuilder的区别。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-2-string，stringbuffer，stringbuilder的区别。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.1.2 String，Stringbuffer，StringBuilder的区别。")]),a._v(" "),r("h5",{attrs:{id:"_4-1-3-arraylist和linkedlist有什么区别。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-3-arraylist和linkedlist有什么区别。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.1.3 ArrayList和LinkedList有什么区别。")]),a._v(" "),r("h5",{attrs:{id:"_4-1-4-讲讲类的实例化顺序，比如父类静态数据，构造函数，字段，子类静态数据，构造函数，字段，当new的时候，他们的执行顺序。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-4-讲讲类的实例化顺序，比如父类静态数据，构造函数，字段，子类静态数据，构造函数，字段，当new的时候，他们的执行顺序。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.1.4 讲讲类的实例化顺序，比如父类静态数据，构造函数，字段，子类静态数据，构造函数，字段，当new的时候，他们的执行顺序。")]),a._v(" "),r("h5",{attrs:{id:"_4-1-5-用过哪些map类，都有什么区别，hashmap是线程安全的吗-并发下使用的map是什么，他们内部原理分别是什么，比如存储方式，hashcode，扩容，默认容量等。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-5-用过哪些map类，都有什么区别，hashmap是线程安全的吗-并发下使用的map是什么，他们内部原理分别是什么，比如存储方式，hashcode，扩容，默认容量等。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.1.5 用过哪些Map类，都有什么区别，HashMap是线程安全的吗,并发下使用的Map是什么，他们内部原理分别是什么，比如存储方式，hashcode，扩容，默认容量等。")]),a._v(" "),r("h5",{attrs:{id:"_4-1-6-java8的concurrenthashmap为什么放弃了分段锁，有什么问题吗，如果你来设计，你如何设计。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-6-java8的concurrenthashmap为什么放弃了分段锁，有什么问题吗，如果你来设计，你如何设计。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.1.6 JAVA8的ConcurrentHashMap为什么放弃了分段锁，有什么问题吗，如果你来设计，你如何设计。")]),a._v(" "),r("h5",{attrs:{id:"_4-1-7-有没有有顺序的map实现类，如果有，他们是怎么保证有序的。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-7-有没有有顺序的map实现类，如果有，他们是怎么保证有序的。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.1.7 有没有有顺序的Map实现类，如果有，他们是怎么保证有序的。")]),a._v(" "),r("h5",{attrs:{id:"_4-1-8-抽象类和接口的区别，类可以继承多个类么，接口可以继承多个接口么-类可以实现多个接口么。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-8-抽象类和接口的区别，类可以继承多个类么，接口可以继承多个接口么-类可以实现多个接口么。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.1.8 抽象类和接口的区别，类可以继承多个类么，接口可以继承多个接口么,类可以实现多个接口么。")]),a._v(" "),r("h5",{attrs:{id:"_4-1-9-继承和聚合的区别在哪。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-9-继承和聚合的区别在哪。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.1.9 继承和聚合的区别在哪。")]),a._v(" "),r("h5",{attrs:{id:"_4-2-0-io模型有哪些，讲讲你理解的nio-，他和bio，aio的区别是啥，谈谈reactor模型。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-0-io模型有哪些，讲讲你理解的nio-，他和bio，aio的区别是啥，谈谈reactor模型。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.2.0 IO模型有哪些，讲讲你理解的nio ，他和bio，aio的区别是啥，谈谈reactor模型。")]),a._v(" "),r("h5",{attrs:{id:"_4-2-1-反射的原理，反射创建类实例的三种方式是什么。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-1-反射的原理，反射创建类实例的三种方式是什么。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.2.1 反射的原理，反射创建类实例的三种方式是什么。")]),a._v(" "),r("h5",{attrs:{id:"_4-2-2-反射中，class-forname和classloader区别-。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-2-反射中，class-forname和classloader区别-。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.2.2 反射中，Class.forName和ClassLoader区别 。")]),a._v(" "),r("h5",{attrs:{id:"_4-2-3-描述动态代理的几种实现方式，分别说出相应的优缺点。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-3-描述动态代理的几种实现方式，分别说出相应的优缺点。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.2.3 描述动态代理的几种实现方式，分别说出相应的优缺点。")]),a._v(" "),r("h5",{attrs:{id:"_4-2-4-动态代理与cglib实现的区别。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-4-动态代理与cglib实现的区别。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.2.4 动态代理与cglib实现的区别。")]),a._v(" "),r("h5",{attrs:{id:"_4-2-5-为什么cglib方式可以对接口实现代理。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-5-为什么cglib方式可以对接口实现代理。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.2.5 为什么CGlib方式可以对接口实现代理。")]),a._v(" "),r("h5",{attrs:{id:"_4-2-6-final的用途。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-6-final的用途。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.2.6 final的用途。")]),a._v(" "),r("h5",{attrs:{id:"_4-2-7-写出三种单例模式实现-。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-7-写出三种单例模式实现-。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.2.7 写出三种单例模式实现 。")]),a._v(" "),r("h5",{attrs:{id:"_4-2-8-如何在父类中为子类自动完成所有的hashcode和equals实现？这么做有何优劣。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-8-如何在父类中为子类自动完成所有的hashcode和equals实现？这么做有何优劣。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.2.8 如何在父类中为子类自动完成所有的hashcode和equals实现？这么做有何优劣。")]),a._v(" "),r("h5",{attrs:{id:"_4-2-9-请结合oo设计理念，谈谈访问修饰符public、private、protected、default在应用设计中的作用。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-9-请结合oo设计理念，谈谈访问修饰符public、private、protected、default在应用设计中的作用。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.2.9 请结合OO设计理念，谈谈访问修饰符public、private、protected、default在应用设计中的作用。")]),a._v(" "),r("h5",{attrs:{id:"_4-3-0-深拷贝和浅拷贝区别。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-0-深拷贝和浅拷贝区别。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.3.0 深拷贝和浅拷贝区别。")]),a._v(" "),r("h5",{attrs:{id:"_4-3-1-数组和链表数据结构描述，各自的时间复杂度。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-1-数组和链表数据结构描述，各自的时间复杂度。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.3.1 数组和链表数据结构描述，各自的时间复杂度。")]),a._v(" "),r("h5",{attrs:{id:"_4-3-2-error和exception的区别，checkedexception，runtimeexception的区别。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-2-error和exception的区别，checkedexception，runtimeexception的区别。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.3.2 error和exception的区别，CheckedException，RuntimeException的区别。")]),a._v(" "),r("h5",{attrs:{id:"_4-3-3-请列出5个运行时异常。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-3-请列出5个运行时异常。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.3.3 请列出5个运行时异常。")]),a._v(" "),r("h5",{attrs:{id:"_4-3-4-在自己的代码中，如果创建一个java-lang-string类，这个类是否可以被类加载器加载？为什么。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-4-在自己的代码中，如果创建一个java-lang-string类，这个类是否可以被类加载器加载？为什么。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.3.4 在自己的代码中，如果创建一个java.lang.String类，这个类是否可以被类加载器加载？为什么。")]),a._v(" "),r("h5",{attrs:{id:"_4-3-5-说一说你对java-lang-object对象中hashcode和equals方法的理解。在什么场景下需要重新实现这两个方法。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-5-说一说你对java-lang-object对象中hashcode和equals方法的理解。在什么场景下需要重新实现这两个方法。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.3.5 说一说你对java.lang.Object对象中hashCode和equals方法的理解。在什么场景下需要重新实现这两个方法。")]),a._v(" "),r("h5",{attrs:{id:"_4-3-6-在jdk1-5中，引入了泛型，泛型的存在是用来解决什么问题。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-6-在jdk1-5中，引入了泛型，泛型的存在是用来解决什么问题。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.3.6 在jdk1.5中，引入了泛型，泛型的存在是用来解决什么问题。")]),a._v(" "),r("h5",{attrs:{id:"_4-3-7-这样的a-hashcode-有什么用，与a-equals-b-有什么关系。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-7-这样的a-hashcode-有什么用，与a-equals-b-有什么关系。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.3.7 这样的a.hashcode() 有什么用，与a.equals(b)有什么关系。")]),a._v(" "),r("h5",{attrs:{id:"_4-3-8-有没有可能2个不相等的对象有相同的hashcode。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-8-有没有可能2个不相等的对象有相同的hashcode。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.3.8 有没有可能2个不相等的对象有相同的hashcode。")]),a._v(" "),r("h5",{attrs:{id:"_4-3-9-java中的hashset内部是如何工作的。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-9-java中的hashset内部是如何工作的。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.3.9 Java中的HashSet内部是如何工作的。")]),a._v(" "),r("h5",{attrs:{id:"_4-4-0-什么是序列化，怎么序列化，为什么序列化，反序列化会遇到什么问题，如何解决。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-0-什么是序列化，怎么序列化，为什么序列化，反序列化会遇到什么问题，如何解决。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.4.0 什么是序列化，怎么序列化，为什么序列化，反序列化会遇到什么问题，如何解决。")]),a._v(" "),r("h5",{attrs:{id:"_4-4-1-java8的新特性。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-1-java8的新特性。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.4.1 java8的新特性。")]),a._v(" "),r("h4",{attrs:{id:"jvm"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#jvm","aria-hidden":"true"}},[a._v("#")]),a._v(" JVM")]),a._v(" "),r("h5",{attrs:{id:"_4-4-2-什么情况下会发生栈内存溢出。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-2-什么情况下会发生栈内存溢出。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.4.2 什么情况下会发生栈内存溢出。")]),a._v(" "),r("h5",{attrs:{id:"_4-4-3-jvm的内存结构，eden和survivor比例。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-3-jvm的内存结构，eden和survivor比例。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.4.3 JVM的内存结构，Eden和Survivor比例。")]),a._v(" "),r("h5",{attrs:{id:"_4-4-4-jvm内存为什么要分成新生代，老年代，持久代。新生代中为什么要分为eden和survivor。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-4-jvm内存为什么要分成新生代，老年代，持久代。新生代中为什么要分为eden和survivor。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.4.4 JVM内存为什么要分成新生代，老年代，持久代。新生代中为什么要分为Eden和Survivor。")]),a._v(" "),r("h5",{attrs:{id:"_4-4-5-jvm中一次完整的gc流程是怎样的，对象如何晋升到老年代，说说你知道的几种主要的jvm参数。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-5-jvm中一次完整的gc流程是怎样的，对象如何晋升到老年代，说说你知道的几种主要的jvm参数。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.4.5 JVM中一次完整的GC流程是怎样的，对象如何晋升到老年代，说说你知道的几种主要的JVM参数。")]),a._v(" "),r("h5",{attrs:{id:"_4-4-6-你知道哪几种垃圾收集器，各自的优缺点，重点讲下cms和g1，包括原理，流程，优缺点。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-6-你知道哪几种垃圾收集器，各自的优缺点，重点讲下cms和g1，包括原理，流程，优缺点。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.4.6 你知道哪几种垃圾收集器，各自的优缺点，重点讲下cms和G1，包括原理，流程，优缺点。")]),a._v(" "),r("h5",{attrs:{id:"_4-4-7-垃圾回收算法的实现原理。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-7-垃圾回收算法的实现原理。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.4.7 垃圾回收算法的实现原理。")]),a._v(" "),r("h5",{attrs:{id:"_4-4-8-当出现了内存溢出，你怎么排错。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-8-当出现了内存溢出，你怎么排错。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.4.8 当出现了内存溢出，你怎么排错。")]),a._v(" "),r("h5",{attrs:{id:"_4-4-9-jvm内存模型的相关知识了解多少，比如重排序，内存屏障，happen-before，主内存，工作内存等。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-9-jvm内存模型的相关知识了解多少，比如重排序，内存屏障，happen-before，主内存，工作内存等。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.4.9 JVM内存模型的相关知识了解多少，比如重排序，内存屏障，happen-before，主内存，工作内存等。")]),a._v(" "),r("h5",{attrs:{id:"_4-5-0-简单说说你了解的类加载器，可以打破双亲委派么，怎么打破。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-0-简单说说你了解的类加载器，可以打破双亲委派么，怎么打破。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.5.0 简单说说你了解的类加载器，可以打破双亲委派么，怎么打破。")]),a._v(" "),r("h5",{attrs:{id:"_4-5-1-讲讲java的反射机制。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-1-讲讲java的反射机制。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.5.1 讲讲JAVA的反射机制。")]),a._v(" "),r("h5",{attrs:{id:"_4-5-2-你们线上应用的jvm参数有哪些。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-2-你们线上应用的jvm参数有哪些。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.5.2 你们线上应用的JVM参数有哪些。")]),a._v(" "),r("h5",{attrs:{id:"_4-5-3-g1和cms区别-吞吐量优先和响应优先的垃圾收集器选择。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-3-g1和cms区别-吞吐量优先和响应优先的垃圾收集器选择。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.5.3 g1和cms区别,吞吐量优先和响应优先的垃圾收集器选择。")]),a._v(" "),r("h5",{attrs:{id:"_4-5-4-怎么打出线程栈信息。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-4-怎么打出线程栈信息。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.5.4 怎么打出线程栈信息。")]),a._v(" "),r("h4",{attrs:{id:"开源框架"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#开源框架","aria-hidden":"true"}},[a._v("#")]),a._v(" 开源框架")]),a._v(" "),r("h5",{attrs:{id:"_4-5-5-简单讲讲tomcat结构，以及其类加载器流程，线程模型等。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-5-简单讲讲tomcat结构，以及其类加载器流程，线程模型等。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.5.5 简单讲讲tomcat结构，以及其类加载器流程，线程模型等。")]),a._v(" "),r("h5",{attrs:{id:"_4-5-6-tomcat如何调优，涉及哪些参数-。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-6-tomcat如何调优，涉及哪些参数-。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.5.6 tomcat如何调优，涉及哪些参数 。")]),a._v(" "),r("h5",{attrs:{id:"_4-5-7-讲讲spring加载流程。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-7-讲讲spring加载流程。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.5.7 讲讲Spring加载流程。")]),a._v(" "),r("h5",{attrs:{id:"_4-5-8-spring-aop的实现原理。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-8-spring-aop的实现原理。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.5.8 Spring AOP的实现原理。")]),a._v(" "),r("h5",{attrs:{id:"_4-5-9-讲讲spring事务的传播属性。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-9-讲讲spring事务的传播属性。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.5.9 讲讲Spring事务的传播属性。")]),a._v(" "),r("h5",{attrs:{id:"_4-6-0-spring如何管理事务的。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-0-spring如何管理事务的。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.6.0 Spring如何管理事务的。")]),a._v(" "),r("h5",{attrs:{id:"_4-6-1-spring怎么配置事务（具体说出一些关键的xml-元素）。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-1-spring怎么配置事务（具体说出一些关键的xml-元素）。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.6.1 Spring怎么配置事务（具体说出一些关键的xml 元素）。")]),a._v(" "),r("h5",{attrs:{id:"_4-6-2-说说你对spring的理解，非单例注入的原理？它的生命周期？循环注入的原理，aop的实现原理，说说aop中的几个术语，它们是怎么相互工作的。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-2-说说你对spring的理解，非单例注入的原理？它的生命周期？循环注入的原理，aop的实现原理，说说aop中的几个术语，它们是怎么相互工作的。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.6.2 说说你对Spring的理解，非单例注入的原理？它的生命周期？循环注入的原理，aop的实现原理，说说aop中的几个术语，它们是怎么相互工作的。")]),a._v(" "),r("h5",{attrs:{id:"_4-6-3-springmvc-中dispatcherservlet初始化过程。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-3-springmvc-中dispatcherservlet初始化过程。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.6.3 Springmvc 中DispatcherServlet初始化过程。")]),a._v(" "),r("h5",{attrs:{id:"_4-6-4-netty的线程模型，netty如何基于reactor模型上实现的。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-4-netty的线程模型，netty如何基于reactor模型上实现的。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.6.4 netty的线程模型，netty如何基于reactor模型上实现的。")]),a._v(" "),r("h5",{attrs:{id:"_4-6-5-为什么选择netty。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-5-为什么选择netty。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.6.5 为什么选择netty。")]),a._v(" "),r("h5",{attrs:{id:"_4-6-6-什么是tcp粘包，拆包。解决方式是什么。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-6-什么是tcp粘包，拆包。解决方式是什么。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.6.6 什么是TCP粘包，拆包。解决方式是什么。")]),a._v(" "),r("h5",{attrs:{id:"_4-6-7-netty的fashwheeltimer的用法，实现原理，是否出现过调用不够准时，怎么解决。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-7-netty的fashwheeltimer的用法，实现原理，是否出现过调用不够准时，怎么解决。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.6.7 netty的fashwheeltimer的用法，实现原理，是否出现过调用不够准时，怎么解决。")]),a._v(" "),r("h5",{attrs:{id:"_4-6-8-netty的心跳处理在弱网下怎么办。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-8-netty的心跳处理在弱网下怎么办。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.6.8 netty的心跳处理在弱网下怎么办。")]),a._v(" "),r("h5",{attrs:{id:"_4-6-9-netty的通讯协议是什么样的。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-9-netty的通讯协议是什么样的。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.6.9 netty的通讯协议是什么样的。")]),a._v(" "),r("h5",{attrs:{id:"_4-7-0-springmvc用到的注解，作用是什么，原理。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-7-0-springmvc用到的注解，作用是什么，原理。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.7.0 springmvc用到的注解，作用是什么，原理。")]),a._v(" "),r("h5",{attrs:{id:"_4-7-1-springboot启动机制。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-7-1-springboot启动机制。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.7.1 springboot启动机制。")]),a._v(" "),r("h4",{attrs:{id:"操作系统"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#操作系统","aria-hidden":"true"}},[a._v("#")]),a._v(" 操作系统")]),a._v(" "),r("h5",{attrs:{id:"_4-7-2-linux系统下你关注过哪些内核参数，说说你知道的。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-7-2-linux系统下你关注过哪些内核参数，说说你知道的。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.7.2 Linux系统下你关注过哪些内核参数，说说你知道的。")]),a._v(" "),r("h5",{attrs:{id:"_4-7-3-linux下io模型有几种，各自的含义是什么。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-7-3-linux下io模型有几种，各自的含义是什么。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.7.3 Linux下IO模型有几种，各自的含义是什么。")]),a._v(" "),r("h5",{attrs:{id:"_4-7-4-epoll和poll有什么区别。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-7-4-epoll和poll有什么区别。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.7.4 epoll和poll有什么区别。")]),a._v(" "),r("h5",{attrs:{id:"_4-7-5-平时用到哪些linux命令。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-7-5-平时用到哪些linux命令。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.7.5 平时用到哪些Linux命令。")]),a._v(" "),r("h5",{attrs:{id:"_4-7-6-用一行命令查看文件的最后五行。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-7-6-用一行命令查看文件的最后五行。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.7.6 用一行命令查看文件的最后五行。")]),a._v(" "),r("h5",{attrs:{id:"_4-7-7-用一行命令输出正在运行的java进程。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-7-7-用一行命令输出正在运行的java进程。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.7.7 用一行命令输出正在运行的java进程。")]),a._v(" "),r("h5",{attrs:{id:"_4-7-8-介绍下你理解的操作系统中线程切换过程。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-7-8-介绍下你理解的操作系统中线程切换过程。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.7.8 介绍下你理解的操作系统中线程切换过程。")]),a._v(" "),r("h5",{attrs:{id:"_4-7-9-进程和线程的区别。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-7-9-进程和线程的区别。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.7.9 进程和线程的区别。")]),a._v(" "),r("h5",{attrs:{id:"_4-8-0-top-命令之后有哪些内容，有什么作用。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-8-0-top-命令之后有哪些内容，有什么作用。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.8.0 top 命令之后有哪些内容，有什么作用。")]),a._v(" "),r("h5",{attrs:{id:"_4-8-1-线上cpu爆高，请问你如何找到问题所在。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-8-1-线上cpu爆高，请问你如何找到问题所在。","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.8.1 线上CPU爆高，请问你如何找到问题所在。")]),a._v(" "),r("br"),a._v(" "),r("h3",{attrs:{id:"美团篇"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#美团篇","aria-hidden":"true"}},[a._v("#")]),a._v(" 美团篇")]),a._v(" "),r("br"),a._v(" "),r("h5",{attrs:{id:"_5-1-0-java虚拟机内存模型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-0-java虚拟机内存模型","aria-hidden":"true"}},[a._v("#")]),a._v(" 5.1.0 java虚拟机内存模型")]),a._v(" "),r("h5",{attrs:{id:"_5-1-1-内存溢出一般发生在哪个区？永久代会不会导致内存溢出？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-1-内存溢出一般发生在哪个区？永久代会不会导致内存溢出？","aria-hidden":"true"}},[a._v("#")]),a._v(" 5.1.1 内存溢出一般发生在哪个区？永久代会不会导致内存溢出？")]),a._v(" "),r("h5",{attrs:{id:"_5-1-2-动态加载类的框架了解哪些？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-2-动态加载类的框架了解哪些？","aria-hidden":"true"}},[a._v("#")]),a._v(" 5.1.2 动态加载类的框架了解哪些？")]),a._v(" "),r("h5",{attrs:{id:"_5-1-3-动态代理一般有哪几种实现方式？动态代理的应用场景有哪些？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-3-动态代理一般有哪几种实现方式？动态代理的应用场景有哪些？","aria-hidden":"true"}},[a._v("#")]),a._v(" 5.1.3 动态代理一般有哪几种实现方式？动态代理的应用场景有哪些？")]),a._v(" "),r("h5",{attrs:{id:"_5-1-4-栈会不会溢出？栈溢出一般抛什么异常？jvm在哪里设置栈的大小？设置的参数是什么？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-4-栈会不会溢出？栈溢出一般抛什么异常？jvm在哪里设置栈的大小？设置的参数是什么？","aria-hidden":"true"}},[a._v("#")]),a._v(" 5.1.4 栈会不会溢出？栈溢出一般抛什么异常？jvm在哪里设置栈的大小？设置的参数是什么？")]),a._v(" "),r("h5",{attrs:{id:"_5-1-5-用过哪些命令查看jvm的状态、堆栈信息？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-5-用过哪些命令查看jvm的状态、堆栈信息？","aria-hidden":"true"}},[a._v("#")]),a._v(" 5.1.5 用过哪些命令查看jvm的状态、堆栈信息？")]),a._v(" "),r("h5",{attrs:{id:"_5-1-6-jvm的垃圾回收机制？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-6-jvm的垃圾回收机制？","aria-hidden":"true"}},[a._v("#")]),a._v(" 5.1.6 jvm的垃圾回收机制？")]),a._v(" "),r("h5",{attrs:{id:"_5-1-7-java类加载机制？如何实现自定义类加载器？findclass与loadclass的区别？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-7-java类加载机制？如何实现自定义类加载器？findclass与loadclass的区别？","aria-hidden":"true"}},[a._v("#")]),a._v(" 5.1.7 java类加载机制？如何实现自定义类加载器？findClass与loadClass的区别？")]),a._v(" "),r("h5",{attrs:{id:"_5-1-8-string、stringbuffer、stringbuilder的区别？对应的使用场景？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-8-string、stringbuffer、stringbuilder的区别？对应的使用场景？","aria-hidden":"true"}},[a._v("#")]),a._v(" 5.1.8 String、StringBuffer、StringBuilder的区别？对应的使用场景？")]),a._v(" "),r("h5",{attrs:{id:"_5-1-9-如何实现不可变的类？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-9-如何实现不可变的类？","aria-hidden":"true"}},[a._v("#")]),a._v(" 5.1.9 如何实现不可变的类？")]),a._v(" "),r("h5",{attrs:{id:"_5-2-0-浅复制和深复制？怎样实现深复制？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-0-浅复制和深复制？怎样实现深复制？","aria-hidden":"true"}},[a._v("#")]),a._v(" 5.2.0 浅复制和深复制？怎样实现深复制？")]),a._v(" "),r("h5",{attrs:{id:"_5-2-1-hashmap、hashtable、concurrenthashmap的区别？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-1-hashmap、hashtable、concurrenthashmap的区别？","aria-hidden":"true"}},[a._v("#")]),a._v(" 5.2.1 HashMap、HashTable、ConcurrentHashMap的区别？")]),a._v(" "),r("h5",{attrs:{id:"_5-2-2-cas是一种什么样的同步机制？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-2-cas是一种什么样的同步机制？","aria-hidden":"true"}},[a._v("#")]),a._v(" 5.2.2 CAS是一种什么样的同步机制？")]),a._v(" "),r("h5",{attrs:{id:"_5-2-3-nio的原理，包括哪几个组件？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-3-nio的原理，包括哪几个组件？","aria-hidden":"true"}},[a._v("#")]),a._v(" 5.2.3 NIO的原理，包括哪几个组件？")]),a._v(" "),r("h5",{attrs:{id:"_5-2-4-简单介绍一下java的反射机制？反射在哪些地方有应用场景？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-4-简单介绍一下java的反射机制？反射在哪些地方有应用场景？","aria-hidden":"true"}},[a._v("#")]),a._v(" 5.2.4 简单介绍一下java的反射机制？反射在哪些地方有应用场景？")]),a._v(" "),r("h5",{attrs:{id:"_5-2-5-spring加载bean的流程？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-5-spring加载bean的流程？","aria-hidden":"true"}},[a._v("#")]),a._v(" 5.2.5 spring加载bean的流程？")]),a._v(" "),r("h5",{attrs:{id:"_5-2-6-java线程池？线程池构造函数的几个参数含义？keepalivetime解释一下？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-6-java线程池？线程池构造函数的几个参数含义？keepalivetime解释一下？","aria-hidden":"true"}},[a._v("#")]),a._v(" 5.2.6 java线程池？线程池构造函数的几个参数含义？keepAliveTime解释一下？")]),a._v(" "),r("h5",{attrs:{id:"_5-2-7-一个接口，要去调用另外5个接口，每一个接口都会返回数据给这个调用接口，调用接口要对数据进行合并并返回给上层。这样一种场景可能用到并发包下的哪些类？你会怎么去实现这样的业务场景？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-7-一个接口，要去调用另外5个接口，每一个接口都会返回数据给这个调用接口，调用接口要对数据进行合并并返回给上层。这样一种场景可能用到并发包下的哪些类？你会怎么去实现这样的业务场景？","aria-hidden":"true"}},[a._v("#")]),a._v(" 5.2.7 一个接口，要去调用另外5个接口，每一个接口都会返回数据给这个调用接口，调用接口要对数据进行合并并返回给上层。这样一种场景可能用到并发包下的哪些类？你会怎么去实现这样的业务场景？")]),a._v(" "),r("h5",{attrs:{id:"_5-2-8-countdownlatch和cyclicbarrier的区别？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-8-countdownlatch和cyclicbarrier的区别？","aria-hidden":"true"}},[a._v("#")]),a._v(" 5.2.8 CountDownLatch和CyclicBarrier的区别？")]),a._v(" "),r("h5",{attrs:{id:"_5-2-9-线程加锁有哪些方式？synchronized和lock的区别？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-9-线程加锁有哪些方式？synchronized和lock的区别？","aria-hidden":"true"}},[a._v("#")]),a._v(" 5.2.9 线程加锁有哪些方式？synchronized和lock的区别？")]),a._v(" "),r("h5",{attrs:{id:"_5-3-0-volatile关键字的作用？为什么使用atomiclong而不使用long-atomiclong的底层是怎么实现的？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-0-volatile关键字的作用？为什么使用atomiclong而不使用long-atomiclong的底层是怎么实现的？","aria-hidden":"true"}},[a._v("#")]),a._v(" 5.3.0 volatile关键字的作用？为什么使用AtomicLong而不使用Long?AtomicLong的底层是怎么实现的？")]),a._v(" "),r("h5",{attrs:{id:"_5-3-1-mysql的存储引擎有哪几种？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-1-mysql的存储引擎有哪几种？","aria-hidden":"true"}},[a._v("#")]),a._v(" 5.3.1 mysql的存储引擎有哪几种？")]),a._v(" "),r("h5",{attrs:{id:"_5-3-2-sql优化有哪些着手点？组合索引的最左前缀原则的含义？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-2-sql优化有哪些着手点？组合索引的最左前缀原则的含义？","aria-hidden":"true"}},[a._v("#")]),a._v(" 5.3.2 sql优化有哪些着手点？组合索引的最左前缀原则的含义？")]),a._v(" "),r("h5",{attrs:{id:"_5-3-3-springmvc处理请求的流程？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-3-springmvc处理请求的流程？","aria-hidden":"true"}},[a._v("#")]),a._v(" 5.3.3 springmvc处理请求的流程？")]),a._v(" "),r("h5",{attrs:{id:"_5-3-4-spring的事务怎么使用？事务回滚？自定义异常？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-4-spring的事务怎么使用？事务回滚？自定义异常？","aria-hidden":"true"}},[a._v("#")]),a._v(" 5.3.4 spring的事务怎么使用？事务回滚？自定义异常？")]),a._v(" "),r("h5",{attrs:{id:"_5-3-5-脏读？幻读？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-5-脏读？幻读？","aria-hidden":"true"}},[a._v("#")]),a._v(" 5.3.5 脏读？幻读？")]),a._v(" "),r("h5",{attrs:{id:"_5-3-6-tcp四次挥手的过程？time-wait为什么至少设置两倍的msl时间？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-6-tcp四次挥手的过程？time-wait为什么至少设置两倍的msl时间？","aria-hidden":"true"}},[a._v("#")]),a._v(" 5.3.6 tcp四次挥手的过程？TIME_WAIT为什么至少设置两倍的MSL时间？")]),a._v(" "),r("h5",{attrs:{id:"_5-3-7-get和post请求的区别？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-7-get和post请求的区别？","aria-hidden":"true"}},[a._v("#")]),a._v(" 5.3.7 get和post请求的区别？")]),a._v(" "),r("h5",{attrs:{id:"_5-3-8-cookie和session的请求？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-8-cookie和session的请求？","aria-hidden":"true"}},[a._v("#")]),a._v(" 5.3.8 cookie和session的请求？")]),a._v(" "),r("h5",{attrs:{id:"_5-3-9-了解哪些开源的中间件？缓存？消息？分布式框架？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-9-了解哪些开源的中间件？缓存？消息？分布式框架？","aria-hidden":"true"}},[a._v("#")]),a._v(" 5.3.9 了解哪些开源的中间件？缓存？消息？分布式框架？")]),a._v(" "),r("h5",{attrs:{id:"_5-4-0-用到过哪些设计模式？单例模式的实现？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-0-用到过哪些设计模式？单例模式的实现？","aria-hidden":"true"}},[a._v("#")]),a._v(" 5.4.0 用到过哪些设计模式？单例模式的实现？")]),a._v(" "),r("h5",{attrs:{id:"_5-4-1-数据库的事务实现原理、操作过程、如何做到事物之间的独立性等问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-1-数据库的事务实现原理、操作过程、如何做到事物之间的独立性等问题","aria-hidden":"true"}},[a._v("#")]),a._v(" 5.4.1 数据库的事务实现原理、操作过程、如何做到事物之间的独立性等问题")]),a._v(" "),r("h5",{attrs:{id:"_5-4-2-数据库的脏读，幻读，不可重复读出现的原因原理，解决办法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-2-数据库的脏读，幻读，不可重复读出现的原因原理，解决办法","aria-hidden":"true"}},[a._v("#")]),a._v(" 5.4.2 数据库的脏读，幻读，不可重复读出现的原因原理，解决办法")]),a._v(" "),r("h5",{attrs:{id:"_5-4-3-数据库的隔离级别、mvcc"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-3-数据库的隔离级别、mvcc","aria-hidden":"true"}},[a._v("#")]),a._v(" 5.4.3 数据库的隔离级别、MVCC")]),a._v(" "),r("h5",{attrs:{id:"_5-4-4-乐观锁、悲观锁、互斥锁、读写锁的原理实现与区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-4-乐观锁、悲观锁、互斥锁、读写锁的原理实现与区别","aria-hidden":"true"}},[a._v("#")]),a._v(" 5.4.4 乐观锁、悲观锁、互斥锁、读写锁的原理实现与区别")]),a._v(" "),r("h5",{attrs:{id:"_5-4-5-线程的生命周期"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-5-线程的生命周期","aria-hidden":"true"}},[a._v("#")]),a._v(" 5.4.5 线程的生命周期")]),a._v(" "),r("h5",{attrs:{id:"_5-4-6-一致性hash算法原理与应用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-6-一致性hash算法原理与应用","aria-hidden":"true"}},[a._v("#")]),a._v(" 5.4.6 一致性hash算法原理与应用")]),a._v(" "),r("h5",{attrs:{id:"_5-4-7-cap原则"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-7-cap原则","aria-hidden":"true"}},[a._v("#")]),a._v(" 5.4.7 CAP原则")]),a._v(" "),r("h5",{attrs:{id:"_5-4-8-cas操作"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-8-cas操作","aria-hidden":"true"}},[a._v("#")]),a._v(" 5.4.8 CAS操作")]),a._v(" "),r("h5",{attrs:{id:"_5-4-9-分布式raft算法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-9-分布式raft算法","aria-hidden":"true"}},[a._v("#")]),a._v(" 5.4.9 分布式raft算法")]),a._v(" "),r("br"),a._v(" "),r("h3",{attrs:{id:"头条篇"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#头条篇","aria-hidden":"true"}},[a._v("#")]),a._v(" 头条篇")]),a._v(" "),r("br"),a._v(" "),r("h5",{attrs:{id:"_6-1-0-5个人去一个海岛寻宝，最后一共找到了100枚金币。他们约定了一个分配方案。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-0-5个人去一个海岛寻宝，最后一共找到了100枚金币。他们约定了一个分配方案。","aria-hidden":"true"}},[a._v("#")]),a._v(" 6.1.0 5个人去一个海岛寻宝，最后一共找到了100枚金币。他们约定了一个分配方案。")]),a._v(" "),r("h5",{attrs:{id:"_6-1-1-给你一个有序整数数组，数组中的数可以是正数、负数、零，请实现一个函数，这个函数返回一个整数：返回这个数组所有数的平方值中有多少种不同的取值。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-1-给你一个有序整数数组，数组中的数可以是正数、负数、零，请实现一个函数，这个函数返回一个整数：返回这个数组所有数的平方值中有多少种不同的取值。","aria-hidden":"true"}},[a._v("#")]),a._v(" 6.1.1 给你一个有序整数数组，数组中的数可以是正数、负数、零，请实现一个函数，这个函数返回一个整数：返回这个数组所有数的平方值中有多少种不同的取值。")]),a._v(" "),r("h5",{attrs:{id:"_6-1-2-一个环有10个节点，编号0-9。从0点出发，走n步又能回到0点，共有多少种走法？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-2-一个环有10个节点，编号0-9。从0点出发，走n步又能回到0点，共有多少种走法？","aria-hidden":"true"}},[a._v("#")]),a._v(" 6.1.2 一个环有10个节点，编号0-9。从0点出发，走N步又能回到0点，共有多少种走法？")]),a._v(" "),r("h5",{attrs:{id:"_6-1-3-一个乱序数组，求第k大的数。排序方式使用字典序。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-3-一个乱序数组，求第k大的数。排序方式使用字典序。","aria-hidden":"true"}},[a._v("#")]),a._v(" 6.1.3 一个乱序数组，求第K大的数。排序方式使用字典序。")]),a._v(" "),r("h5",{attrs:{id:"_6-1-4-一棵二叉树，求最大通路长度。（即最大左右子树高度之和）"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-4-一棵二叉树，求最大通路长度。（即最大左右子树高度之和）","aria-hidden":"true"}},[a._v("#")]),a._v(" 6.1.4 一棵二叉树，求最大通路长度。（即最大左右子树高度之和）")]),a._v(" "),r("h5",{attrs:{id:"_6-1-5-进程和线程的区别，使用线程真的能节省时间？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-5-进程和线程的区别，使用线程真的能节省时间？","aria-hidden":"true"}},[a._v("#")]),a._v(" 6.1.5 进程和线程的区别，使用线程真的能节省时间？")]),a._v(" "),r("h5",{attrs:{id:"_6-1-6-go协程的调度方式，使用协程真的能节省时间？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-6-go协程的调度方式，使用协程真的能节省时间？","aria-hidden":"true"}},[a._v("#")]),a._v(" 6.1.6 go协程的调度方式，使用协程真的能节省时间？")]),a._v(" "),r("h5",{attrs:{id:"_6-1-7-水平触发边沿触发的区别？在边沿触发下，一个socket有500的数据，已读取200然后不再处理，是不是剩下的300就永远无法读取？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-7-水平触发边沿触发的区别？在边沿触发下，一个socket有500的数据，已读取200然后不再处理，是不是剩下的300就永远无法读取？","aria-hidden":"true"}},[a._v("#")]),a._v(" 6.1.7 水平触发边沿触发的区别？在边沿触发下，一个socket有500的数据，已读取200然后不再处理，是不是剩下的300就永远无法读取？")]),a._v(" "),r("h5",{attrs:{id:"_6-1-8-有函数如下，输入1，返回什么？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-8-有函数如下，输入1，返回什么？","aria-hidden":"true"}},[a._v("#")]),a._v(" 6.1.8 有函数如下，输入1，返回什么？")]),a._v(" "),r("h5",{attrs:{id:"_6-1-9-设计http协议，a端发送-aaaa，至少让b端知道aaaa已发送完成。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-9-设计http协议，a端发送-aaaa，至少让b端知道aaaa已发送完成。","aria-hidden":"true"}},[a._v("#")]),a._v(" 6.1.9 设计http协议，A端发送 AAAA，至少让B端知道AAAA已发送完成。")]),a._v(" "),r("h5",{attrs:{id:"_6-2-0-流量总入口为api-gateway，api-gateway挂了会导致全部挂挂，用什么机制增大可用性？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-0-流量总入口为api-gateway，api-gateway挂了会导致全部挂挂，用什么机制增大可用性？","aria-hidden":"true"}},[a._v("#")]),a._v(" 6.2.0 流量总入口为api_gateway，api_gateway挂了会导致全部挂挂，用什么机制增大可用性？")]),a._v(" "),r("h5",{attrs:{id:"_6-2-1-mysql为什么要用b-树，不用平衡二叉树做索引结构？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-1-mysql为什么要用b-树，不用平衡二叉树做索引结构？","aria-hidden":"true"}},[a._v("#")]),a._v(" 6.2.1 mysql为什么要用b+树，不用平衡二叉树做索引结构？")]),a._v(" "),r("h5",{attrs:{id:"_6-2-2-创建数据库索引应该怎么考虑？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-2-创建数据库索引应该怎么考虑？","aria-hidden":"true"}},[a._v("#")]),a._v(" 6.2.2 创建数据库索引应该怎么考虑？")]),a._v(" "),r("h5",{attrs:{id:"_6-2-3-使用int-做primary-key和使用string-有什么优劣？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-3-使用int-做primary-key和使用string-有什么优劣？","aria-hidden":"true"}},[a._v("#")]),a._v(" 6.2.3 使用int 做primary key和使用string 有什么优劣？")]),a._v(" "),r("h5",{attrs:{id:"_6-2-4-数据库分表的方法？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-4-数据库分表的方法？","aria-hidden":"true"}},[a._v("#")]),a._v(" 6.2.4 数据库分表的方法？")]),a._v(" "),r("h5",{attrs:{id:"_6-2-5-表结构，订单纪录如下，写一个语句，求卖的最好的-top-10-product-id。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-5-表结构，订单纪录如下，写一个语句，求卖的最好的-top-10-product-id。","aria-hidden":"true"}},[a._v("#")]),a._v(" 6.2.5 表结构，订单纪录如下，写一个语句，求卖的最好的 top 10 product_id。")]),a._v(" "),r("h5",{attrs:{id:"_6-2-6-微服务，a服务请求b服务b1接口，b1接口又请求a服务a2接口。会不会有问题？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-6-微服务，a服务请求b服务b1接口，b1接口又请求a服务a2接口。会不会有问题？","aria-hidden":"true"}},[a._v("#")]),a._v(" 6.2.6 微服务，A服务请求B服务B1接口，B1接口又请求A服务A2接口。会不会有问题？")]),a._v(" "),r("h5",{attrs:{id:"_6-2-7-不使用高级工具，只使用linux自带的工具，你会如何debug"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-7-不使用高级工具，只使用linux自带的工具，你会如何debug","aria-hidden":"true"}},[a._v("#")]),a._v(" 6.2.7 不使用高级工具，只使用Linux自带的工具，你会如何debug?")]),a._v(" "),r("h5",{attrs:{id:"_6-2-8-如何预估一个mysql语句的性能？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-8-如何预估一个mysql语句的性能？","aria-hidden":"true"}},[a._v("#")]),a._v(" 6.2.8 如何预估一个mysql语句的性能？")]),a._v(" "),r("h5",{attrs:{id:"_6-2-9-go函数中，返回值未命名，发生了panic，但是在函数内recover了。函数返回什么值？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-9-go函数中，返回值未命名，发生了panic，但是在函数内recover了。函数返回什么值？","aria-hidden":"true"}},[a._v("#")]),a._v(" 6.2.9 go函数中，返回值未命名，发生了panic，但是在函数内recover了。函数返回什么值？")]),a._v(" "),r("h5",{attrs:{id:"_6-3-0-socket中，在tcp协议层面，数据分为10个报文发放。1-7次很顺利，第8次丢失。这次通信一定失败吗？如果第8次数据会重发，那在接收端是不是：先读取到1-7次的数据，然后读取到8-10次的数据-还是9-10次的数据会先到达？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-0-socket中，在tcp协议层面，数据分为10个报文发放。1-7次很顺利，第8次丢失。这次通信一定失败吗？如果第8次数据会重发，那在接收端是不是：先读取到1-7次的数据，然后读取到8-10次的数据-还是9-10次的数据会先到达？","aria-hidden":"true"}},[a._v("#")]),a._v(" 6.3.0 socket中，在tcp协议层面，数据分为10个报文发放。1-7次很顺利，第8次丢失。这次通信一定失败吗？如果第8次数据会重发，那在接收端是不是：先读取到1-7次的数据，然后读取到8-10次的数据?还是9-10次的数据会先到达？")]),a._v(" "),r("h5",{attrs:{id:"_6-3-1-free-h，buffers-和cached有什么不同"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-1-free-h，buffers-和cached有什么不同","aria-hidden":"true"}},[a._v("#")]),a._v(" 6.3.1 free -h，buffers 和cached有什么不同")]),a._v(" "),r("h5",{attrs:{id:"_6-3-2-后台进程有什么特点，如果要你设计一个进程是后台进程，你会考虑什么"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-2-后台进程有什么特点，如果要你设计一个进程是后台进程，你会考虑什么","aria-hidden":"true"}},[a._v("#")]),a._v(" 6.3.2 后台进程有什么特点，如果要你设计一个进程是后台进程，你会考虑什么")]),a._v(" "),r("h5",{attrs:{id:"_6-3-3-僵尸进程是什么，如果产生一个僵尸进程，如何查找僵尸进程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-3-僵尸进程是什么，如果产生一个僵尸进程，如何查找僵尸进程","aria-hidden":"true"}},[a._v("#")]),a._v(" 6.3.3 僵尸进程是什么，如果产生一个僵尸进程，如何查找僵尸进程")]),a._v(" "),r("h5",{attrs:{id:"_6-3-4-孤儿进程是什么"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-4-孤儿进程是什么","aria-hidden":"true"}},[a._v("#")]),a._v(" 6.3.4 孤儿进程是什么")]),a._v(" "),r("h5",{attrs:{id:"_6-3-5-一个进程有20个线程，在某个线程中调用fork，新的进程会有20个线程吗？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-5-一个进程有20个线程，在某个线程中调用fork，新的进程会有20个线程吗？","aria-hidden":"true"}},[a._v("#")]),a._v(" 6.3.5 一个进程有20个线程，在某个线程中调用fork，新的进程会有20个线程吗？")]),a._v(" "),r("h5",{attrs:{id:"_6-3-6-tcp-ip-流量控制和拥塞控制"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-6-tcp-ip-流量控制和拥塞控制","aria-hidden":"true"}},[a._v("#")]),a._v(" 6.3.6 tcp/ip 流量控制和拥塞控制")]),a._v(" "),r("h5",{attrs:{id:"_6-3-7-301-302有什么区别？应用上有什么异同。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-7-301-302有什么区别？应用上有什么异同。","aria-hidden":"true"}},[a._v("#")]),a._v(" 6.3.7 301/302有什么区别？应用上有什么异同。")]),a._v(" "),r("h5",{attrs:{id:"_6-3-8-50x相关错误码的内涵是什么？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-8-50x相关错误码的内涵是什么？","aria-hidden":"true"}},[a._v("#")]),a._v(" 6.3.8 50X相关错误码的内涵是什么？")]),a._v(" "),r("h5",{attrs:{id:"_6-3-9-close-wait和time-wait是什么？如何排查？有什么意义？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-9-close-wait和time-wait是什么？如何排查？有什么意义？","aria-hidden":"true"}},[a._v("#")]),a._v(" 6.3.9 close wait和time wait是什么？如何排查？有什么意义？")]),a._v(" "),r("h5",{attrs:{id:"_6-4-0-http-req和resp的中数据有哪些"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-0-http-req和resp的中数据有哪些","aria-hidden":"true"}},[a._v("#")]),a._v(" 6.4.0 http req和resp的中数据有哪些")]),a._v(" "),r("h5",{attrs:{id:"_6-4-1-什么是连接的半打开，半关闭状态"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-1-什么是连接的半打开，半关闭状态","aria-hidden":"true"}},[a._v("#")]),a._v(" 6.4.1 什么是连接的半打开，半关闭状态")]),a._v(" "),r("h5",{attrs:{id:"_6-4-2-假如一个业务依赖单点redis，此redis故障将导致业务不可用，如何改进"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-2-假如一个业务依赖单点redis，此redis故障将导致业务不可用，如何改进","aria-hidden":"true"}},[a._v("#")]),a._v(" 6.4.2 假如一个业务依赖单点redis，此redis故障将导致业务不可用，如何改进")]),a._v(" "),r("h5",{attrs:{id:"_6-4-3-redis-sharding有哪些做法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-3-redis-sharding有哪些做法","aria-hidden":"true"}},[a._v("#")]),a._v(" 6.4.3 redis sharding有哪些做法")]),a._v(" "),r("h5",{attrs:{id:"_6-4-4-当大量数据要求用redis保存，单机单点难以满足需要，设计（换寻找）一个负载均衡的方案"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-4-当大量数据要求用redis保存，单机单点难以满足需要，设计（换寻找）一个负载均衡的方案","aria-hidden":"true"}},[a._v("#")]),a._v(" 6.4.4 当大量数据要求用redis保存，单机单点难以满足需要，设计（换寻找）一个负载均衡的方案")]),a._v(" "),r("h5",{attrs:{id:"_6-4-5-当redis-采用hash做sharding，现在有8个节点，负载方案是-pos-hash-key-8，然后保存在pos节点上。这样做有什么好处坏处？当8个节点要扩充到10个节点，应该怎么办？有什么更方便扩充的方案吗？（一致性hash-presharding）"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-5-当redis-采用hash做sharding，现在有8个节点，负载方案是-pos-hash-key-8，然后保存在pos节点上。这样做有什么好处坏处？当8个节点要扩充到10个节点，应该怎么办？有什么更方便扩充的方案吗？（一致性hash-presharding）","aria-hidden":"true"}},[a._v("#")]),a._v(" 6.4.5 当redis 采用hash做sharding，现在有8个节点，负载方案是 pos = hash(key) % 8，然后保存在pos节点上。这样做有什么好处坏处？当8个节点要扩充到10个节点，应该怎么办？有什么更方便扩充的方案吗？（一致性hash, presharding）")]),a._v(" "),r("h5",{attrs:{id:"_6-4-6-如何保证redis和数据库数据的一致性。比如用户名既保存在数据库，又保存在redis做缓存。有如下操作-update-db-username-update-redis-username-。但是执行update-db后故障，update-redis没有执行。有什么简单办法解决这个问题。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-6-如何保证redis和数据库数据的一致性。比如用户名既保存在数据库，又保存在redis做缓存。有如下操作-update-db-username-update-redis-username-。但是执行update-db后故障，update-redis没有执行。有什么简单办法解决这个问题。","aria-hidden":"true"}},[a._v("#")]),a._v(" 6.4.6 如何保证redis和数据库数据的一致性。比如用户名既保存在数据库，又保存在redis做缓存。有如下操作 update_db(username); update_redis(username)。但是执行update_db后故障，update_redis没有执行。有什么简单办法解决这个问题。")]),a._v(" "),r("br"),a._v(" "),r("h3",{attrs:{id:"滴滴篇"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#滴滴篇","aria-hidden":"true"}},[a._v("#")]),a._v(" 滴滴篇")]),a._v(" "),r("br"),a._v(" "),r("h5",{attrs:{id:"_7-1-0-b-树、b-树的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-0-b-树、b-树的区别","aria-hidden":"true"}},[a._v("#")]),a._v(" 7.1.0 B+树、B-树的区别?")]),a._v(" "),r("h5",{attrs:{id:"_7-1-1-数据库隔离级别，幻读和不可重复读的区别？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-1-数据库隔离级别，幻读和不可重复读的区别？","aria-hidden":"true"}},[a._v("#")]),a._v(" 7.1.1 数据库隔离级别，幻读和不可重复读的区别？")]),a._v(" "),r("h5",{attrs:{id:"_7-1-2-有hell-well-hello-world等字符串组，现在问能否拼接成helloworld，代码实现。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-2-有hell-well-hello-world等字符串组，现在问能否拼接成helloworld，代码实现。","aria-hidden":"true"}},[a._v("#")]),a._v(" 7.1.2 有hell, well, hello, world等字符串组，现在问能否拼接成helloworld，代码实现。")]),a._v(" "),r("h5",{attrs:{id:"_7-1-3-快排算法实现"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-3-快排算法实现","aria-hidden":"true"}},[a._v("#")]),a._v(" 7.1.3 快排算法实现")]),a._v(" "),r("h5",{attrs:{id:"_7-1-4-线程安全的单例模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-4-线程安全的单例模式","aria-hidden":"true"}},[a._v("#")]),a._v(" 7.1.4 线程安全的单例模式")]),a._v(" "),r("h5",{attrs:{id:"_7-1-5-25匹马赛跑，有一个赛场，只有五个赛道，没有计时器，只能通过目测来记录快慢，求出第三3快的马要多少场比赛？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-5-25匹马赛跑，有一个赛场，只有五个赛道，没有计时器，只能通过目测来记录快慢，求出第三3快的马要多少场比赛？","aria-hidden":"true"}},[a._v("#")]),a._v(" 7.1.5 25匹马赛跑，有一个赛场，只有五个赛道，没有计时器，只能通过目测来记录快慢，求出第三3快的马要多少场比赛？")]),a._v(" "),r("h5",{attrs:{id:"_7-1-6-kmp算法next数组的求解思路"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-6-kmp算法next数组的求解思路","aria-hidden":"true"}},[a._v("#")]),a._v(" 7.1.6 kmp算法next数组的求解思路")]),a._v(" "),r("h5",{attrs:{id:"_7-1-7-数组中有三个数字出现超过3-4，求这三个数字？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-7-数组中有三个数字出现超过3-4，求这三个数字？","aria-hidden":"true"}},[a._v("#")]),a._v(" 7.1.7 数组中有三个数字出现超过3/4，求这三个数字？")]),a._v(" "),r("h5",{attrs:{id:"_7-1-8-1到n-2个数组中缺了两个数，如何用o-n-时间，o-1-空间找到这两个数字。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-8-1到n-2个数组中缺了两个数，如何用o-n-时间，o-1-空间找到这两个数字。","aria-hidden":"true"}},[a._v("#")]),a._v(" 7.1.8 1到n+2个数组中缺了两个数，如何用O(n)时间，O(1)空间找到这两个数字。")]),a._v(" "),r("h5",{attrs:{id:"_7-1-9-一条线段长为1，随机选两个点，将改线段分为三段，三段能成三角形的概率是多少？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-9-一条线段长为1，随机选两个点，将改线段分为三段，三段能成三角形的概率是多少？","aria-hidden":"true"}},[a._v("#")]),a._v(" 7.1.9 一条线段长为1，随机选两个点，将改线段分为三段，三段能成三角形的概率是多少？")]),a._v(" "),r("h5",{attrs:{id:"_7-2-0-有一个教授，他三个学生，脑袋背后分别各写了一个数字，其中一个数字是另外两个数字的和，经过几轮后，有一个学生猜出了自己的数字请问是什么原因？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-0-有一个教授，他三个学生，脑袋背后分别各写了一个数字，其中一个数字是另外两个数字的和，经过几轮后，有一个学生猜出了自己的数字请问是什么原因？","aria-hidden":"true"}},[a._v("#")]),a._v(" 7.2.0 有一个教授，他三个学生，脑袋背后分别各写了一个数字，其中一个数字是另外两个数字的和，经过几轮后，有一个学生猜出了自己的数字请问是什么原因？")]),a._v(" "),r("h5",{attrs:{id:"_7-2-1-b-树做索引时，b-树通常高度为多少层？要参考哪些条件？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-1-b-树做索引时，b-树通常高度为多少层？要参考哪些条件？","aria-hidden":"true"}},[a._v("#")]),a._v(" 7.2.1 B+树做索引时，B+树通常高度为多少层？要参考哪些条件？")]),a._v(" "),r("br"),a._v(" "),r("h3",{attrs:{id:"京东篇"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#京东篇","aria-hidden":"true"}},[a._v("#")]),a._v(" 京东篇")]),a._v(" "),r("br"),a._v(" "),r("h5",{attrs:{id:"_8-1-0-一般sql注入怎么发现触点的，从源码阐述sqlmap如何测试注入点的。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-0-一般sql注入怎么发现触点的，从源码阐述sqlmap如何测试注入点的。","aria-hidden":"true"}},[a._v("#")]),a._v(" 8.1.0 一般sql注入怎么发现触点的，从源码阐述sqlmap如何测试注入点的。")]),a._v(" "),r("h5",{attrs:{id:"_8-1-1-masscan扫描端口时靠什么检测，为什么这么快-请详述"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-1-masscan扫描端口时靠什么检测，为什么这么快-请详述","aria-hidden":"true"}},[a._v("#")]),a._v(" 8.1.1 masscan扫描端口时靠什么检测，为什么这么快? 请详述.")]),a._v(" "),r("h5",{attrs:{id:"_8-1-2-你写过哪些小工具，你为你使用过的工具做过什么修改"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-2-你写过哪些小工具，你为你使用过的工具做过什么修改","aria-hidden":"true"}},[a._v("#")]),a._v(" 8.1.2 你写过哪些小工具，你为你使用过的工具做过什么修改.")]),a._v(" "),r("h5",{attrs:{id:"_8-1-3-如何提高采用python编写的扫描速度，谈谈对gil锁的了解"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-3-如何提高采用python编写的扫描速度，谈谈对gil锁的了解","aria-hidden":"true"}},[a._v("#")]),a._v(" 8.1.3 如何提高采用python编写的扫描速度，谈谈对GIL锁的了解.")]),a._v(" "),r("h5",{attrs:{id:"_8-1-4-你觉得你发现的那个漏洞影响比较大"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-4-你觉得你发现的那个漏洞影响比较大","aria-hidden":"true"}},[a._v("#")]),a._v(" 8.1.4 你觉得你发现的那个漏洞影响比较大.")]),a._v(" "),r("h5",{attrs:{id:"_8-1-5-常见的web漏洞有哪些"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-5-常见的web漏洞有哪些","aria-hidden":"true"}},[a._v("#")]),a._v(" 8.1.5 常见的web漏洞有哪些.")]),a._v(" "),r("h5",{attrs:{id:"_8-1-6-有没有玩过硬件安全，研究程度如何"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-6-有没有玩过硬件安全，研究程度如何","aria-hidden":"true"}},[a._v("#")]),a._v(" 8.1.6 有没有玩过硬件安全，研究程度如何.")]),a._v(" "),r("h5",{attrs:{id:"_8-1-7-反爬虫，如果是你如何进行反爬虫，如何绕过反爬措施。-使用无头浏览器被检测到了，如何绕过"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-7-反爬虫，如果是你如何进行反爬虫，如何绕过反爬措施。-使用无头浏览器被检测到了，如何绕过","aria-hidden":"true"}},[a._v("#")]),a._v(" 8.1.7 反爬虫，如果是你如何进行反爬虫，如何绕过反爬措施。 使用无头浏览器被检测到了，如何绕过")]),a._v(" "),r("h5",{attrs:{id:"_8-1-8-nmap扫描如何进行扫描。发包与协议，握手和不握手，哪些协议握手，哪些不握手-如何不直接接触目标服务器探测对方端口是否开放"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-8-nmap扫描如何进行扫描。发包与协议，握手和不握手，哪些协议握手，哪些不握手-如何不直接接触目标服务器探测对方端口是否开放","aria-hidden":"true"}},[a._v("#")]),a._v(" 8.1.8 nmap扫描如何进行扫描。发包与协议，握手和不握手，哪些协议握手，哪些不握手. 如何不直接接触目标服务器探测对方端口是否开放")]),a._v(" "),r("h5",{attrs:{id:"_8-1-9-有没有自己编写过yara扫描模块，如果要解决扫描-k1-v1-k2-v2-k3-v3-，保证同时在k1中的v1里出现特定值，k2中出现v2特定值，以及k3-v3。怎么实现"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-9-有没有自己编写过yara扫描模块，如果要解决扫描-k1-v1-k2-v2-k3-v3-，保证同时在k1中的v1里出现特定值，k2中出现v2特定值，以及k3-v3。怎么实现","aria-hidden":"true"}},[a._v("#")]),a._v(" 8.1.9 有没有自己编写过yara扫描模块，如果要解决扫描{k1:v1, k2:v2, k3:v3} ，保证同时在k1中的v1里出现特定值，k2中出现v2特定值，以及k3,v3。怎么实现")]),a._v(" "),r("h5",{attrs:{id:"_8-2-0-xss什么原理，如何自己实现一个beef类似的xss平台-既然这样实现，面临的跨域如何解决"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-2-0-xss什么原理，如何自己实现一个beef类似的xss平台-既然这样实现，面临的跨域如何解决","aria-hidden":"true"}},[a._v("#")]),a._v(" 8.2.0 xss什么原理，如何自己实现一个beef类似的xss平台. 既然这样实现，面临的跨域如何解决?")]),a._v(" "),r("h5",{attrs:{id:"_8-2-1-ip-频率限制-ip信誉度模型？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-2-1-ip-频率限制-ip信誉度模型？","aria-hidden":"true"}},[a._v("#")]),a._v(" 8.2.1 ip 频率限制, ip信誉度模型？")]),a._v(" "),r("h5",{attrs:{id:"_8-2-2-sctp协议是什么？如何使用-sctp-优化网络？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-2-2-sctp协议是什么？如何使用-sctp-优化网络？","aria-hidden":"true"}},[a._v("#")]),a._v(" 8.2.2 SCTP协议是什么？如何使用 SCTP 优化网络？")]),a._v(" "),r("h2",{attrs:{id:"技术类别篇"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#技术类别篇","aria-hidden":"true"}},[a._v("#")]),a._v(" 技术类别篇")]),a._v(" "),r("br"),a._v(" "),r("h3",{attrs:{id:"mysql篇"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#mysql篇","aria-hidden":"true"}},[a._v("#")]),a._v(" mysql篇")]),a._v(" "),r("br"),a._v(" "),r("h5",{attrs:{id:"_9-1-0-主键-超键-候选键-外键"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-1-0-主键-超键-候选键-外键","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/5c3f9dc2.html"}},[a._v("9.1.0 主键 超键 候选键 外键")])],1),a._v(" "),r("h5",{attrs:{id:"_9-1-1-数据库事务的四个特性及含义"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-1-1-数据库事务的四个特性及含义","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/6734b6e9.html"}},[a._v("9.1.1 数据库事务的四个特性及含义")])],1),a._v(" "),r("h5",{attrs:{id:"_9-1-2-视图的作用，视图可以更改么？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-1-2-视图的作用，视图可以更改么？","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/3405af21.html"}},[a._v("9.1.2 视图的作用，视图可以更改么？")])],1),a._v(" "),r("h5",{attrs:{id:"_9-1-3-drop-delete与truncate的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-1-3-drop-delete与truncate的区别","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/33def9fc.html"}},[a._v("9.1.3 drop,delete与truncate的区别")])],1),a._v(" "),r("h5",{attrs:{id:"_9-1-4-索引的工作原理及其种类"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-1-4-索引的工作原理及其种类","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/3f66232d.html"}},[a._v("9.1.4 索引的工作原理及其种类")])],1),a._v(" "),r("h5",{attrs:{id:"_9-1-5-连接的种类"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-1-5-连接的种类","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/3fd5ae60.html"}},[a._v("9.1.5 连接的种类")])],1),a._v(" "),r("h5",{attrs:{id:"_9-1-6-数据库范式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-1-6-数据库范式","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/8cf5bd9f.html"}},[a._v("9.1.6 数据库范式")])],1),a._v(" "),r("h5",{attrs:{id:"_9-1-7-数据库优化的思路"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-1-7-数据库优化的思路","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/5f054e68.html"}},[a._v("9.1.7 数据库优化的思路")])],1),a._v(" "),r("h5",{attrs:{id:"_9-1-8-存储过程与触发器的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-1-8-存储过程与触发器的区别","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/b3807386.html"}},[a._v("9.1.8 存储过程与触发器的区别")])],1),a._v(" "),r("br"),a._v(" "),r("h3",{attrs:{id:"redis篇"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#redis篇","aria-hidden":"true"}},[a._v("#")]),a._v(" redis篇")]),a._v(" "),r("br"),a._v(" "),r("h5",{attrs:{id:"_10-1-0-使用redis有哪些好处？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_10-1-0-使用redis有哪些好处？","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/3db10cc7.html"}},[a._v("10.1.0 使用Redis有哪些好处？")])],1),a._v(" "),r("h5",{attrs:{id:"_10-1-1-redis相比memcached有哪些优势？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_10-1-1-redis相比memcached有哪些优势？","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/6862481d.html"}},[a._v("10.1.1 redis相比memcached有哪些优势？")])],1),a._v(" "),r("h5",{attrs:{id:"_10-1-2-redis常见性能问题和解决方案"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_10-1-2-redis常见性能问题和解决方案","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/293698e1.html"}},[a._v("10.1.2 redis常见性能问题和解决方案")])],1),a._v(" "),r("h5",{attrs:{id:"_10-1-3-mysql里有2000w数据，redis中只存20w的数据，如何保证redis中的数据都是热点数据"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_10-1-3-mysql里有2000w数据，redis中只存20w的数据，如何保证redis中的数据都是热点数据","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/2cecec1c.html"}},[a._v("10.1.3 MySQL里有2000w数据，redis中只存20w的数据，如何保证redis中的数据都是热点数据")])],1),a._v(" "),r("h5",{attrs:{id:"_10-1-4-memcache与redis的区别都有哪些？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_10-1-4-memcache与redis的区别都有哪些？","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/13a0faa0.html"}},[a._v("10.1.4 Memcache与Redis的区别都有哪些？")])],1),a._v(" "),r("h5",{attrs:{id:"_10-1-5-redis-常见的性能问题都有哪些？如何解决？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_10-1-5-redis-常见的性能问题都有哪些？如何解决？","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/26011d4c.html"}},[a._v("10.1.5 Redis 常见的性能问题都有哪些？如何解决？")])],1),a._v(" "),r("h5",{attrs:{id:"_10-1-6-redis-最适合的场景"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_10-1-6-redis-最适合的场景","aria-hidden":"true"}},[a._v("#")]),a._v(" 10.1.6 redis 最适合的场景")]),a._v(" "),r("h5",{attrs:{id:"_10-1-7-redis的同步机制了解么？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_10-1-7-redis的同步机制了解么？","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/5e3631ae.html"}},[a._v("10.1.7 Redis的同步机制了解么？")])],1),a._v(" "),r("h5",{attrs:{id:"_10-1-8-是否使用过redis集群，集群的原理是什么？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_10-1-8-是否使用过redis集群，集群的原理是什么？","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/263c2181.html"}},[a._v("10.1.8 是否使用过Redis集群，集群的原理是什么？")])],1),a._v(" "),r("h5",{attrs:{id:"_10-1-9-redis集群如何保证一致性？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_10-1-9-redis集群如何保证一致性？","aria-hidden":"true"}},[a._v("#")]),a._v(" 10.1.9 redis集群如何保证一致性？")]),a._v(" "),r("br"),a._v(" "),r("h3",{attrs:{id:"mongdb篇"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#mongdb篇","aria-hidden":"true"}},[a._v("#")]),a._v(" MongDB篇")]),a._v(" "),r("br"),a._v(" "),r("h5",{attrs:{id:"_11-1-0-什么是mongodb？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-1-0-什么是mongodb？","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/97cdfc18.html"}},[a._v("11.1.0 什么是MongoDB？")])],1),a._v(" "),r("h5",{attrs:{id:"_11-1-1-mongodb是由哪种语言写的？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-1-1-mongodb是由哪种语言写的？","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/3c6becaf.html"}},[a._v("11.1.1 MongoDB是由哪种语言写的？")])],1),a._v(" "),r("h5",{attrs:{id:"_11-1-2-mongodb的优势有哪些？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-1-2-mongodb的优势有哪些？","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/cb9dca0c.html"}},[a._v("11.1.2 MongoDB的优势有哪些？")])],1),a._v(" "),r("h5",{attrs:{id:"_11-1-3-什么是数据库？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-1-3-什么是数据库？","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/2b978e40.html"}},[a._v("11.1.3 什么是数据库？")])],1),a._v(" "),r("h5",{attrs:{id:"_11-1-4-什么是集合？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-1-4-什么是集合？","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/42d97abc.html"}},[a._v("11.1.4 什么是集合？")])],1),a._v(" "),r("h5",{attrs:{id:"_11-1-5-什么是文档？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-1-5-什么是文档？","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/33e6e7c2.html"}},[a._v("11.1.5 什么是文档？")])],1),a._v(" "),r("h5",{attrs:{id:"_11-1-6-mongodb和关系型数据库术语对比图"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-1-6-mongodb和关系型数据库术语对比图","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/638854fb.html"}},[a._v("11.1.6 MongoDB和关系型数据库术语对比图")])],1),a._v(" "),r("h5",{attrs:{id:"_11-1-7-什么是“mongod”？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-1-7-什么是“mongod”？","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/5d4a789b.html"}},[a._v("11.1.7 什么是“mongod”？")])],1),a._v(" "),r("h5",{attrs:{id:"_11-1-8-“mongod”参数有什么？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-1-8-“mongod”参数有什么？","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/01dabe3f.html"}},[a._v("11.1.8 “mongod”参数有什么？")])],1),a._v(" "),r("h5",{attrs:{id:"_11-1-9-什么是“mongo”？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-1-9-什么是“mongo”？","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/7604e2f1.html"}},[a._v("11.1.9 什么是“mongo”？")])],1),a._v(" "),r("h5",{attrs:{id:"_11-2-0-mongodb哪个命令可以切换数据库？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-2-0-mongodb哪个命令可以切换数据库？","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/d6f2108f.html"}},[a._v("11.2.0 MongoDB哪个命令可以切换数据库？")])],1),a._v(" "),r("h5",{attrs:{id:"_11-2-1-什么是非关系型数据库？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-2-1-什么是非关系型数据库？","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/b17d554b.html"}},[a._v("11.2.1 什么是非关系型数据库？")])],1),a._v(" "),r("h5",{attrs:{id:"_11-2-2-非关系型数据库有哪些类型？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-2-2-非关系型数据库有哪些类型？","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/b51f3021.html"}},[a._v("11.2.2 非关系型数据库有哪些类型？")])],1),a._v(" "),r("h5",{attrs:{id:"_11-2-3-为什么用mongodb？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-2-3-为什么用mongodb？","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/88e262d5.html"}},[a._v("11.2.3 为什么用MOngoDB？")])],1),a._v(" "),r("h5",{attrs:{id:"_11-2-4-在哪些场景使用mongodb？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-2-4-在哪些场景使用mongodb？","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/26ab933f.html"}},[a._v("11.2.4 在哪些场景使用MongoDB？")])],1),a._v(" "),r("h5",{attrs:{id:"_11-2-5-mongodb中的命名空间是什么意思"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-2-5-mongodb中的命名空间是什么意思","aria-hidden":"true"}},[a._v("#")]),a._v(" 11.2.5 MongoDB中的命名空间是什么意思?")]),a._v(" "),r("h5",{attrs:{id:"_11-2-6-哪些语言支持mongodb"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-2-6-哪些语言支持mongodb","aria-hidden":"true"}},[a._v("#")]),a._v(" 11.2.6 哪些语言支持MongoDB?")]),a._v(" "),r("h5",{attrs:{id:"_11-2-7-在mongodb中如何创建一个新的数据库？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-2-7-在mongodb中如何创建一个新的数据库？","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/7e04282a.html"}},[a._v("11.2.7 在MongoDB中如何创建一个新的数据库？")])],1),a._v(" "),r("h5",{attrs:{id:"_11-2-8-在mongodb中如何查看数据库列表？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-2-8-在mongodb中如何查看数据库列表？","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/21d42081.html"}},[a._v("11.2.8 在MongoDB中如何查看数据库列表？")])],1),a._v(" "),r("h5",{attrs:{id:"_11-2-9-mongodb中的分片是什么意思？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-2-9-mongodb中的分片是什么意思？","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/1efdd823.html"}},[a._v("11.2.9 MongoDB中的分片是什么意思？")])],1),a._v(" "),r("h5",{attrs:{id:"_11-3-0-如何查看使用mongodb的连接？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-3-0-如何查看使用mongodb的连接？","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/a80de0f6.html"}},[a._v("11.3.0 如何查看使用MongoDB的连接？")])],1),a._v(" "),r("h5",{attrs:{id:"_11-3-1-什么是复制？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-3-1-什么是复制？","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/33e01935.html"}},[a._v("11.3.1 什么是复制？")])],1),a._v(" "),r("h5",{attrs:{id:"_11-3-2-在mongodb中如何在集合中插入一个文档？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-3-2-在mongodb中如何在集合中插入一个文档？","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/1a8c15e7.html"}},[a._v("11.3.2 在MongoDB中如何在集合中插入一个文档？")])],1),a._v(" "),r("h5",{attrs:{id:"_11-3-3-在mongodb中如何除去一个数据库？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-3-3-在mongodb中如何除去一个数据库？","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/59f61ad5.html"}},[a._v("11.3.3 在MongoDB中如何除去一个数据库？")])],1),a._v(" "),r("h5",{attrs:{id:"_11-3-4-在mongodb中如何创建一个集合？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-3-4-在mongodb中如何创建一个集合？","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/f269bc6b.html"}},[a._v("11.3.4 在MongoDB中如何创建一个集合？")])],1),a._v(" "),r("h5",{attrs:{id:"_11-3-5-在mongodb中如何查看一个已经创建的集合？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-3-5-在mongodb中如何查看一个已经创建的集合？","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/a1dcab5c.html"}},[a._v("11.3.5 在MongoDB中如何查看一个已经创建的集合？")])],1),a._v(" "),r("h5",{attrs:{id:"_11-3-6-在mongodb中如何删除一个集合？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-3-6-在mongodb中如何删除一个集合？","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/1e87cbcd.html"}},[a._v("11.3.6 在MongoDB中如何删除一个集合？")])],1),a._v(" "),r("h5",{attrs:{id:"_11-3-7-为什么要在mongodb中使用分析器？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-3-7-为什么要在mongodb中使用分析器？","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/bdfb9aba.html"}},[a._v("11.3.7 为什么要在MongoDB中使用分析器？")])],1),a._v(" "),r("h5",{attrs:{id:"_11-3-8-mongodb支持主键外键关系吗？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-3-8-mongodb支持主键外键关系吗？","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/76b5f79f.html"}},[a._v("11.3.8 MongoDB支持主键外键关系吗？")])],1),a._v(" "),r("h5",{attrs:{id:"_11-3-9-mongodb支持哪些数据类型？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-3-9-mongodb支持哪些数据类型？","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/074ac411.html"}},[a._v("11.3.9 MongoDB支持哪些数据类型？")])],1),a._v(" "),r("h5",{attrs:{id:"_11-4-0-为什么要在mongodb中用-code-数据类型？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-4-0-为什么要在mongodb中用-code-数据类型？","aria-hidden":"true"}},[a._v("#")]),a._v(' 11.4.0 为什么要在MongoDB中用"Code"数据类型？')]),a._v(" "),r("h5",{attrs:{id:"_11-4-1-为什么要在mongodb中用-regular-expression-数据类型？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-4-1-为什么要在mongodb中用-regular-expression-数据类型？","aria-hidden":"true"}},[a._v("#")]),a._v(' 11.4.1 为什么要在MongoDB中用"Regular Expression"数据类型？')]),a._v(" "),r("h5",{attrs:{id:"_11-4-2-为什么在mongodb中使用-object-id-数据类型？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-4-2-为什么在mongodb中使用-object-id-数据类型？","aria-hidden":"true"}},[a._v("#")]),a._v(' 11.4.2 为什么在MongoDB中使用"Object ID"数据类型？')]),a._v(" "),r("h5",{attrs:{id:"_11-4-3-如何在集合中插入一个文档？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-4-3-如何在集合中插入一个文档？","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/c08b9c80.html"}},[a._v("11.4.3 如何在集合中插入一个文档？")])],1),a._v(" "),r("h5",{attrs:{id:"_11-4-4-“objectid”有哪些部分组成？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-4-4-“objectid”有哪些部分组成？","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/8caa2148.html"}},[a._v("11.4.4 “ObjectID”有哪些部分组成？")])],1),a._v(" "),r("h5",{attrs:{id:"_11-4-5-在mongodb中什么是索引？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-4-5-在mongodb中什么是索引？","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/e733976b.html"}},[a._v("11.4.5 在MongoDb中什么是索引？")])],1),a._v(" "),r("h5",{attrs:{id:"_11-4-6-如何添加索引？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-4-6-如何添加索引？","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/b229471a.html"}},[a._v("11.4.6 如何添加索引？")])],1),a._v(" "),r("h5",{attrs:{id:"_11-4-7-mongodb有哪些可替代产品？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-4-7-mongodb有哪些可替代产品？","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/19aa80f6.html"}},[a._v("11.4.7 MongoDB有哪些可替代产品？")])],1),a._v(" "),r("h5",{attrs:{id:"_11-4-8-如何查询集合中的文档？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-4-8-如何查询集合中的文档？","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/3d41f35b.html"}},[a._v("11.4.8 如何查询集合中的文档？")])],1),a._v(" "),r("h5",{attrs:{id:"_11-4-9-用什么方法可以格式化输出结果？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-4-9-用什么方法可以格式化输出结果？","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/97576058.html"}},[a._v("11.4.9 用什么方法可以格式化输出结果？")])],1),a._v(" "),r("h5",{attrs:{id:"_11-5-0-如何使用-and-或-or-条件循环查询集合中的文档？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-5-0-如何使用-and-或-or-条件循环查询集合中的文档？","aria-hidden":"true"}},[a._v("#")]),a._v(' 11.5.0 如何使用"AND"或"OR"条件循环查询集合中的文档？')]),a._v(" "),r("h5",{attrs:{id:"_11-5-1-在mongodb中如何更新数据？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-5-1-在mongodb中如何更新数据？","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/9a79522a.html"}},[a._v("11.5.1 在MongoDB中如何更新数据？")])],1),a._v(" "),r("h5",{attrs:{id:"_11-5-2-如何删除文档？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-5-2-如何删除文档？","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/0e179839.html"}},[a._v("11.5.2 如何删除文档？")])],1),a._v(" "),r("h5",{attrs:{id:"_11-5-3-在mongodb中如何排序？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-5-3-在mongodb中如何排序？","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/00ef4a89.html"}},[a._v("11.5.3 在MongoDB中如何排序？")])],1),a._v(" "),r("h5",{attrs:{id:"_11-5-4-什么是聚合？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-5-4-什么是聚合？","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/345e29be.html"}},[a._v("11.5.4 什么是聚合？")])],1),a._v(" "),r("h5",{attrs:{id:"_11-5-5-在mongodb中什么是副本集？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-5-5-在mongodb中什么是副本集？","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/970574ec.html"}},[a._v("11.5.5 在MongoDB中什么是副本集？")])],1),a._v(" "),r("h5",{attrs:{id:"_11-5-6-mongodb存储特性与内部原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-5-6-mongodb存储特性与内部原理","aria-hidden":"true"}},[a._v("#")]),a._v(" 11.5.6 Mongodb存储特性与内部原理?")]),a._v(" "),r("br"),a._v(" "),r("h3",{attrs:{id:"zookeeper篇"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#zookeeper篇","aria-hidden":"true"}},[a._v("#")]),a._v(" Zookeeper篇")]),a._v(" "),r("br"),a._v(" "),r("h5",{attrs:{id:"_12-1-0-zookeeper是什么？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_12-1-0-zookeeper是什么？","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/679dbe26.html"}},[a._v("12.1.0 zookeeper是什么？")])],1),a._v(" "),r("h5",{attrs:{id:"_12-1-1-zookeeper提供了什么？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_12-1-1-zookeeper提供了什么？","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/12e444ea.html"}},[a._v("12.1.1 zookeeper提供了什么？")])],1),a._v(" "),r("h5",{attrs:{id:"_12-1-2-zookeeper文件系统"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_12-1-2-zookeeper文件系统","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/480ec440.html"}},[a._v("12.1.2 zookeeper文件系统")])],1),a._v(" "),r("h5",{attrs:{id:"_12-1-3-zookeeper的四种类型的znode"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_12-1-3-zookeeper的四种类型的znode","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/2f46da72.html"}},[a._v("12.1.3 zookeeper的四种类型的znode")])],1),a._v(" "),r("h5",{attrs:{id:"_12-1-4-zookeeper通知机制"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_12-1-4-zookeeper通知机制","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/71011481.html"}},[a._v("12.1.4 zookeeper通知机制")])],1),a._v(" "),r("h5",{attrs:{id:"_12-1-5-zookeeper有哪些应用场景？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_12-1-5-zookeeper有哪些应用场景？","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/76a45079.html"}},[a._v("12.1.5 zookeeper有哪些应用场景？")])],1),a._v(" "),r("h5",{attrs:{id:"_12-1-6-zk的命名服务"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_12-1-6-zk的命名服务","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/904b7a7c.html"}},[a._v("12.1.6 zk的命名服务")])],1),a._v(" "),r("h5",{attrs:{id:"_12-1-7-zk的配置管理服务"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_12-1-7-zk的配置管理服务","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/936e9db4.html"}},[a._v("12.1.7 zk的配置管理服务")])],1),a._v(" "),r("h5",{attrs:{id:"_12-1-8-zk的集群管理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_12-1-8-zk的集群管理","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/3739e917.html"}},[a._v("12.1.8 zk的集群管理")])],1),a._v(" "),r("h5",{attrs:{id:"_12-1-9-zk的分布式锁"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_12-1-9-zk的分布式锁","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/08a89fd4.html"}},[a._v("12.1.9 zk的分布式锁")])],1),a._v(" "),r("h5",{attrs:{id:"_12-2-0-zk队列管理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_12-2-0-zk队列管理","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/cc1a0290.html"}},[a._v("12.2.0 zk队列管理")])],1),a._v(" "),r("h5",{attrs:{id:"_12-2-1-zk数据复制"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_12-2-1-zk数据复制","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/a371c26e.html"}},[a._v("12.2.1 zk数据复制")])],1),a._v(" "),r("h5",{attrs:{id:"_12-2-2-zk的工作原理-12-2-2-zk的工作原理-md"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_12-2-2-zk的工作原理-12-2-2-zk的工作原理-md","aria-hidden":"true"}},[a._v("#")]),a._v(" [12.2.2 zk的工作原理](12.2.2 zk的工作原理.md)")]),a._v(" "),r("h5",{attrs:{id:"_12-2-3-zk是如何保证事物的顺序一致性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_12-2-3-zk是如何保证事物的顺序一致性","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/8c8ec8fc.html"}},[a._v("12.2.3 zk是如何保证事物的顺序一致性")])],1),a._v(" "),r("h5",{attrs:{id:"_12-2-4-zk集群下server工作状态"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_12-2-4-zk集群下server工作状态","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/3196fdb1.html"}},[a._v("12.2.4 zk集群下server工作状态")])],1),a._v(" "),r("h5",{attrs:{id:"_12-2-5-zk是如何选举leader的？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_12-2-5-zk是如何选举leader的？","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/832ebf3a.html"}},[a._v("12.2.5 zk是如何选举Leader的？")])],1),a._v(" "),r("h5",{attrs:{id:"_12-2-6-zk同步流程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_12-2-6-zk同步流程","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/f821e388.html"}},[a._v("12.2.6 zk同步流程")])],1),a._v(" "),r("h5",{attrs:{id:"_12-2-7-分布式通知和协调"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_12-2-7-分布式通知和协调","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("router-link",{attrs:{to:"/java/interview/96c7042e.html"}},[a._v("12.2.7 分布式通知和协调")])],1),a._v(" "),r("h5",{attrs:{id:"_12-2-8-zk的session机制"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_12-2-8-zk的session机制","aria-hidden":"true"}},[a._v("#")]),a._v(" 12.2.8 zk的session机制")]),a._v(" "),r("br"),a._v(" "),r("h3",{attrs:{id:"nginx篇"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#nginx篇","aria-hidden":"true"}},[a._v("#")]),a._v(" nginx篇")]),a._v(" "),r("br"),a._v(" "),r("h5",{attrs:{id:"_13-1-0-请解释一下什么是nginx"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_13-1-0-请解释一下什么是nginx","aria-hidden":"true"}},[a._v("#")]),a._v(" 13.1.0 请解释一下什么是Nginx?")]),a._v(" "),r("h5",{attrs:{id:"_13-1-1-请列举nginx的一些特性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_13-1-1-请列举nginx的一些特性","aria-hidden":"true"}},[a._v("#")]),a._v(" 13.1.1 请列举Nginx的一些特性?")]),a._v(" "),r("h5",{attrs:{id:"_13-1-2-请列举nginx和apache-之间的不同点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_13-1-2-请列举nginx和apache-之间的不同点","aria-hidden":"true"}},[a._v("#")]),a._v(" 13.1.2 请列举Nginx和Apache 之间的不同点?")]),a._v(" "),r("h5",{attrs:{id:"_13-1-3-请解释nginx如何处理http请求。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_13-1-3-请解释nginx如何处理http请求。","aria-hidden":"true"}},[a._v("#")]),a._v(" 13.1.3 请解释Nginx如何处理HTTP请求。")]),a._v(" "),r("h5",{attrs:{id:"_13-1-4-在nginx中，如何使用未定义的服务器名称来阻止处理请求"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_13-1-4-在nginx中，如何使用未定义的服务器名称来阻止处理请求","aria-hidden":"true"}},[a._v("#")]),a._v(" 13.1.4 在Nginx中，如何使用未定义的服务器名称来阻止处理请求?")]),a._v(" "),r("h5",{attrs:{id:"_13-1-5-使用“反向代理服务器”的优点是什么"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_13-1-5-使用“反向代理服务器”的优点是什么","aria-hidden":"true"}},[a._v("#")]),a._v(" 13.1.5 使用“反向代理服务器”的优点是什么?")]),a._v(" "),r("h5",{attrs:{id:"_13-1-6-请列举nginx服务器的最佳用途。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_13-1-6-请列举nginx服务器的最佳用途。","aria-hidden":"true"}},[a._v("#")]),a._v(" 13.1.6 请列举Nginx服务器的最佳用途。")]),a._v(" "),r("h5",{attrs:{id:"_13-1-7-请解释nginx服务器上的master和worker进程分别是什么"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_13-1-7-请解释nginx服务器上的master和worker进程分别是什么","aria-hidden":"true"}},[a._v("#")]),a._v(" 13.1.7 请解释Nginx服务器上的Master和Worker进程分别是什么?")]),a._v(" "),r("h5",{attrs:{id:"_13-1-8-请解释你如何通过不同于80的端口开启nginx"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_13-1-8-请解释你如何通过不同于80的端口开启nginx","aria-hidden":"true"}},[a._v("#")]),a._v(" 13.1.8 请解释你如何通过不同于80的端口开启Nginx?")]),a._v(" "),r("h5",{attrs:{id:"_13-1-9-请解释是否有可能将nginx的错误替换为502错误、503"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_13-1-9-请解释是否有可能将nginx的错误替换为502错误、503","aria-hidden":"true"}},[a._v("#")]),a._v(" 13.1.9  请解释是否有可能将Nginx的错误替换为502错误、503?")]),a._v(" "),r("h5",{attrs:{id:"_13-2-0-在nginx中，解释如何在url中保留双斜线"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_13-2-0-在nginx中，解释如何在url中保留双斜线","aria-hidden":"true"}},[a._v("#")]),a._v(" 13.2.0 在Nginx中，解释如何在URL中保留双斜线?")]),a._v(" "),r("h5",{attrs:{id:"_13-2-1-请解释ngx-http-upstream-module的作用是什么"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_13-2-1-请解释ngx-http-upstream-module的作用是什么","aria-hidden":"true"}},[a._v("#")]),a._v(" 13.2.1 请解释ngx_http_upstream_module的作用是什么?")]),a._v(" "),r("h5",{attrs:{id:"_13-2-2-请解释什么是c10k问题，后来是怎么解决的？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_13-2-2-请解释什么是c10k问题，后来是怎么解决的？","aria-hidden":"true"}},[a._v("#")]),a._v(" 13.2.2 请解释什么是C10K问题，后来是怎么解决的？")]),a._v(" "),r("h5",{attrs:{id:"_13-2-3-请陈述stub-status和sub-filter指令的作用是什么"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_13-2-3-请陈述stub-status和sub-filter指令的作用是什么","aria-hidden":"true"}},[a._v("#")]),a._v(" 13.2.3 请陈述stub_status和sub_filter指令的作用是什么?")]),a._v(" "),r("h5",{attrs:{id:"_13-2-4-解释nginx是否支持将请求压缩到上游"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_13-2-4-解释nginx是否支持将请求压缩到上游","aria-hidden":"true"}},[a._v("#")]),a._v(" 13.2.4 解释Nginx是否支持将请求压缩到上游?")]),a._v(" "),r("h5",{attrs:{id:"_13-2-5-解释如何在nginx中获得当前的时间"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_13-2-5-解释如何在nginx中获得当前的时间","aria-hidden":"true"}},[a._v("#")]),a._v(" 13.2.5 解释如何在Nginx中获得当前的时间?")]),a._v(" "),r("h5",{attrs:{id:"_13-2-6-用nginx服务器解释-s的目的是什么"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_13-2-6-用nginx服务器解释-s的目的是什么","aria-hidden":"true"}},[a._v("#")]),a._v(" 13.2.6 用Nginx服务器解释-s的目的是什么?")]),a._v(" "),r("h5",{attrs:{id:"_13-2-7-解释如何在nginx服务器上添加模块"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_13-2-7-解释如何在nginx服务器上添加模块","aria-hidden":"true"}},[a._v("#")]),a._v(" 13.2.7 解释如何在Nginx服务器上添加模块?")]),a._v(" "),r("h5",{attrs:{id:"_13-2-8-nginx中多个work进程是如何监听同一个端口的？如何处理客户连接的惊群问题？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_13-2-8-nginx中多个work进程是如何监听同一个端口的？如何处理客户连接的惊群问题？","aria-hidden":"true"}},[a._v("#")]),a._v(" 13.2.8 nginx中多个work进程是如何监听同一个端口的？如何处理客户连接的惊群问题？")]),a._v(" "),r("h5",{attrs:{id:"_13-2-9-nginx程序的热更新是如何做的？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_13-2-9-nginx程序的热更新是如何做的？","aria-hidden":"true"}},[a._v("#")]),a._v(" 13.2.9 nginx程序的热更新是如何做的？")])])},[],!1,null,null,null);t.default=s.exports}}]);