(window.webpackJsonp=window.webpackJsonp||[]).push([[105],{148:function(t,a,r){"use strict";r.r(a);var e=r(0),s=Object(e.a)({},function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h4",{attrs:{id:"题目：存储过程与触发器的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#题目：存储过程与触发器的区别","aria-hidden":"true"}},[t._v("#")]),t._v(" "),r("strong",[t._v("题目")]),t._v("：存储过程与触发器的区别")]),t._v(" "),r("h4",{attrs:{id:"参考答案："}},[r("a",{staticClass:"header-anchor",attrs:{href:"#参考答案：","aria-hidden":"true"}},[t._v("#")]),t._v(" "),r("strong",[t._v("参考答案")]),t._v("：")]),t._v(" "),r("p",[t._v("触发器与存储过程非常相似，触发器也是SQL语句集，两者唯一的区别是触发器不能用EXECUTE语句调用，而是在用户执行Transact-SQL语句时自动触发（激活）执行。触发器是在一个修改了指定表中的数据时执行的存储过程。通常通过创建触发器来强制实现不同表中的逻辑相关数据的引用完整性和一致性。由于用户不能绕过触发器，所以可以用它来强制实施复杂的业务规则，以确保数据的完整性。触发器不同于存储过程，触发器主要是通过事件执行触发而被执行的，而存储过程可以通过存储过程名称名字而直接调用。当对某一表进行诸如UPDATE、INSERT、DELETE这些操作时，SQLSERVER就会自动执行触发器所定义的SQL语句，从而确保对数据的处理必须符合这些SQL语句所定义的规则。")])])},[],!1,null,null,null);a.default=s.exports}}]);